{"version":3,"file":"static/js/110.c18b4431.chunk.js","mappings":"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","sources":["components/common/FlexWrapper/FlexWrapper.styled.jsx","components/common/FlexWrapper/FlexWrapper.jsx","components/ContactList/ContactList.styled.jsx","utils/hooks/useContacts.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n`;\n","import { Div } from './FlexWrapper.styled';\n\nexport const FlexWrapper = ({ children }) => {\n  return <Div>{children}</Div>;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding: 20px 0;\n  display: inline-flex;\n  flex-direction: column;\n\n  font-weight: 500;\n  counter-reset: section;\n\n  /* counter-reset: section; */\n  /* list-style-type: none; */\n\n  li {\n    margin-bottom: 10px;\n    display: inline-flex;\n    padding: 3px 10px 1px;\n    border-radius: 5px;\n\n    gap: 5px;\n    cursor: pointer;\n\n    &::before {\n      counter-increment: section;\n      content: counters(section, '.') '.';\n    }\n\n    button {\n      margin-left: auto;\n      padding: 0;\n      background-color: transparent;\n      border-color: transparent;\n      font-weight: 700;\n\n      &:hover,\n      &:focus {\n        color: tomato;\n      }\n    }\n  }\n  & .active {\n    background-color: teal;\n    color: white;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { List } from './ContactList.styled';\nimport { fetchContactsThunk } from 'store/contacts/contactsOperations';\nimport { deleteContactThunk } from 'store/contacts/contactsOperations';\nimport { setActiveContact } from 'store/contacts/contactsSlice';\nimport { useContacts } from 'utils/hooks';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts, activeContact, filterValue, isLoading } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    let activeEl = document.querySelector('li[data-id].active');\n    activeEl?.classList.remove('active');\n\n    activeEl = document.querySelector(`li[data-id=\"${activeContact?._id}\"]`);\n    activeEl?.classList.add('active');\n  }, [activeContact, isLoading]);\n\n  const filtredContacts = contacts.filter(el => {\n    return el.name.toLowerCase().includes(filterValue.toLowerCase());\n  });\n\n  const handleClick = e => {\n    const { id } = e.target.dataset;\n    const activeContact = contacts.find(el => el._id === id);\n    dispatch(setActiveContact(activeContact));\n  };\n\n  return (\n    <List>\n      {filtredContacts.map(contact => (\n        <li key={contact._id} data-id={contact._id} onClick={handleClick}>\n          {contact.name}\n          <button onClick={() => dispatch(deleteContactThunk(contact._id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nconst heightSize = '30px';\nconst fontSize = '14px';\n\nexport const Div = styled.div`\n  width: 100%;\n  position: relative;\n  display: inline-block;\n\n  input {\n    width: 100%;\n    height: ${heightSize};\n    padding-inline: ${heightSize};\n    border: 1px solid gray;\n    border-radius: 5px;\n    outline: transparent;\n\n    &::placeholder {\n      width: fit-content;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n      transition: left 300ms, transform 300ms;\n      font-size: ${fontSize};\n    }\n\n    &:focus::placeholder {\n      left: 0;\n      transform: translateX(${heightSize});\n    }\n\n    & + svg {\n      position: absolute;\n      top: 50%;\n      left: calc(50% - 2.5 * ${fontSize});\n      transform: translate(-50%, -50%);\n      transition: left 300ms, transform 300ms;\n      cursor: text;\n    }\n\n    &:focus + svg,\n    &:not(:placeholder-shown) + svg {\n      left: calc(${heightSize} * 0.55);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 50%;\n  right: calc(${heightSize} * 0.55);\n  width: 20px;\n  height: 20px;\n\n  transform: translate(50%, -50%);\n  border: 1px solid transparent;\n  border-radius: 50%;\n  background-color: gray;\n  color: white;\n  font-weight: 700;\n  font-size: ${fontSize};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { Div, Button } from './Filter.styled';\nimport { selectFilterValue } from 'store/seletors';\nimport { setFilterValue } from 'store/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleClick = e => e.target.previousElementSibling.focus();\n  const handleSearch = e => dispatch(setFilterValue(e.target.value));\n\n  return (\n    <Div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        value={filterValue}\n        onChange={handleSearch}\n      />\n      <BsSearch size=\"16\" onClick={handleClick} />\n      {filterValue && <Button onClick={handleSearch}>âœ•</Button>}\n    </Div>\n  );\n};\n","import { OvalLoader } from 'components/common/Loader/OvalLoader';\n\nimport { FlexWrapper } from 'components/common/FlexWrapper/FlexWrapper';\nimport { Container } from 'components/common/Container/Container';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useAuth, useContacts } from 'utils/hooks';\n\nconst Contacts = () => {\n  const { userId } = useAuth();\n  const { activeContact, isLoading } = useContacts();\n\n  return (\n    <FlexWrapper>\n      <Container pi=\"0\">\n        <Filter /> <br />\n        <ContactList />\n      </Container>\n\n      <Container\n        t2={userId === activeContact?.owner && activeContact?.name}\n        t3={userId === activeContact?.owner && activeContact?.phone}\n      ></Container>\n\n      {isLoading && <OvalLoader />}\n    </FlexWrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["Div","styled","FlexWrapper","children","List","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading","ContactList","dispatch","useDispatch","useEffect","fetchContactsThunk","activeEl","document","querySelector","classList","remove","_id","add","filtredContacts","filter","el","name","toLowerCase","includes","handleClick","e","id","target","dataset","find","setActiveContact","map","contact","onClick","deleteContactThunk","heightSize","fontSize","Button","Filter","selectFilterValue","handleSearch","setFilterValue","value","type","placeholder","onChange","size","previousElementSibling","focus","userId","useAuth","Container","pi","t2","owner","t3","phone","OvalLoader"],"sourceRoot":""}