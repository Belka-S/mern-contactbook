{"version":3,"file":"static/js/157.c4b1b517.chunk.js","mappings":"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","sources":["utils/hooks/useContacts.js","components/common/FlexWrapper/FlexWrapper.styled.jsx","components/common/FlexWrapper/FlexWrapper.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactCard/ContactCard.styled.jsx","components/ContactCard/ContactCard.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n`;\n","import { Div } from './FlexWrapper.styled';\n\nexport const FlexWrapper = ({ children }) => {\n  return <Div>{children}</Div>;\n};\n","import styled from 'styled-components';\n\nconst heightSize = '30px';\nconst fontSize = '14px';\n\nexport const Div = styled.div`\n  width: 100%;\n  position: relative;\n  display: inline-block;\n\n  input {\n    width: 100%;\n    height: ${heightSize};\n    padding-inline: ${heightSize};\n    border: 1px solid #b1b1b1;\n    border-radius: 5px;\n    outline: transparent;\n    transition: border-color 250ms;\n\n    &:hover,\n    &:focus {\n      border-color: blue;\n    }\n\n    &::placeholder {\n      width: fit-content;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n      transition: left 300ms, transform 300ms;\n      font-size: ${fontSize};\n    }\n\n    &:focus::placeholder {\n      left: 0;\n\n      transform: translateX(${heightSize});\n    }\n\n    & + svg {\n      position: absolute;\n      top: 50%;\n      left: calc(50% - 2.5 * ${fontSize});\n      transform: translate(-50%, -50%);\n      transition: left 300ms, transform 300ms;\n      cursor: text;\n    }\n\n    &:focus + svg,\n    &:not(:placeholder-shown) + svg {\n      left: calc(${heightSize} * 0.55);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 50%;\n  right: calc(${heightSize} * 0.55);\n  width: 20px;\n  height: 20px;\n\n  transform: translate(50%, -50%);\n  border: 1px solid transparent;\n  border-radius: 50%;\n  background-color: gray;\n  color: white;\n  font-weight: 700;\n  font-size: ${fontSize};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { Div, Button } from './Filter.styled';\nimport { selectFilterValue } from 'store/seletors';\nimport { setFilterValue } from 'store/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleClick = e => e.target.previousElementSibling.focus();\n  const handleSearch = e => dispatch(setFilterValue(e.target.value));\n\n  return (\n    <Div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        value={filterValue}\n        onChange={handleSearch}\n      />\n      <BsSearch size=\"16\" onClick={handleClick} />\n      {filterValue && <Button onClick={handleSearch}>âœ•</Button>}\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  padding: 20px 0;\n  display: inline-flex;\n  flex-direction: column;\n\n  font-weight: 500;\n  counter-reset: section;\n\n  /* counter-reset: section; */\n  /* list-style-type: none; */\n\n  li {\n    margin-bottom: 10px;\n    display: inline-flex;\n    padding: 3px 10px 1px;\n    border-radius: 5px;\n\n    gap: 5px;\n    cursor: pointer;\n\n    &::before {\n      counter-increment: section;\n      content: counters(section, '.') '.';\n    }\n\n    button {\n      margin-left: auto;\n      padding: 0;\n      background-color: transparent;\n      border-color: transparent;\n      font-weight: 700;\n\n      &:hover,\n      &:focus {\n        color: tomato;\n      }\n    }\n  }\n  & .active {\n    background-color: teal;\n    color: white;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { List } from './ContactList.styled';\nimport { fetchContactsThunk } from 'store/contacts/contactsOperations';\nimport { deleteContactThunk } from 'store/contacts/contactsOperations';\nimport { setActiveContact } from 'store/contacts/contactsSlice';\nimport { useContacts } from 'utils/hooks';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts, activeContact, filterValue } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // remove previous '.active' class\n    let activeEl = document.querySelector('li[data-id].active');\n    activeEl?.classList.remove('active');\n    // set '.active' class\n    activeEl = document.querySelector(`li[data-id=\"${activeContact?._id}\"]`);\n    if (!activeEl) {\n      activeEl = document.querySelector('li[data-id]');\n      const activeContact = contacts.find(el => el._id === activeEl.dataset.id);\n      dispatch(setActiveContact(activeContact));\n    }\n    activeEl?.classList.add('active');\n  }, [activeContact, contacts, dispatch]);\n\n  const filtredContacts = contacts.filter(el => {\n    return el.name.toLowerCase().includes(filterValue.toLowerCase());\n  });\n\n  const handleClick = e => {\n    const { id } = e.target.dataset;\n    const activeContact = contacts.find(el => el._id === id);\n    dispatch(setActiveContact(activeContact));\n  };\n\n  return (\n    <List>\n      {filtredContacts.map(contact => (\n        <li key={contact._id} data-id={contact._id} onClick={handleClick}>\n          {contact.name}\n          <button onClick={() => dispatch(deleteContactThunk(contact._id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 10px;\n  margin-bottom: 10px;\n\n  & a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 26px;\n    height: 26px;\n    padding: 3px;\n\n    border-radius: 50%;\n    border: 1px solid #b1b1b1;\n    background-color: white;\n    transition: border-color 250ms;\n\n    &:hover,\n    &:focus {\n      cursor: pointer;\n      border-color: blue;\n    }\n\n    & svg {\n      fill: blue;\n    }\n  }\n`;\n","import { BsTelephone, BsEnvelope, BsWhatsapp, BsGithub } from 'react-icons/bs';\nimport { LiaTelegram, LiaViber, LiaLinkedinIn } from 'react-icons/lia';\nimport { PiMapPinFill } from 'react-icons/pi';\n\nimport { Div } from './ContactCard.styled';\nimport { useAuth, useContacts } from 'utils/hooks';\n\nconst ContactCard = () => {\n  const { userId } = useAuth();\n  const { activeContact, isLoading } = useContacts();\n\n  const shouldRender = !isLoading && userId === activeContact?.owner;\n  const off = ['_id', 'name', 'group', 'favorite', 'owner'];\n\n  const link = {\n    phone: {\n      href: `tel:${activeContact?.phone}`,\n      icon: <BsTelephone size=\"14\" />,\n    },\n    email: {\n      href: `mailto:${activeContact?.email}`,\n      icon: <BsEnvelope size=\"15\" />,\n    },\n    whatsapp: {\n      href: `https://wa.me/${activeContact?.whatsapp}`,\n      icon: <BsWhatsapp size=\"15\" />,\n    },\n    telegram: {\n      href: `https://t.me/${activeContact?.telegram}`,\n      icon: <LiaTelegram size=\"20\" />,\n    },\n    viber: {\n      href: `viber://chat?number:+${activeContact?.viber}`,\n      icon: <LiaViber size=\"20\" />,\n    },\n    linkedin: {\n      href: activeContact?.linkedin,\n      icon: <LiaLinkedinIn size=\"20\" />,\n    },\n    github: { href: activeContact?.github, icon: <BsGithub size=\"16\" /> },\n    address: {\n      href:\n        activeContact?.address &&\n        'https://www.google.com/maps/search/' +\n          `${activeContact?.address.split(/\\s+/).join('+')}`,\n      icon: <PiMapPinFill size=\"16\" />,\n    },\n  };\n\n  return (\n    <>\n      <Div>\n        {shouldRender &&\n          Object.keys(link).map(\n            key =>\n              activeContact[key] && (\n                <a\n                  href={link[key].href}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  key={link[key].href}\n                >\n                  {link[key].icon}\n                </a>\n              )\n          )}\n      </Div>\n      <ul>\n        {shouldRender &&\n          Object.keys(activeContact).map(\n            key =>\n              !off.includes(key) &&\n              activeContact[key] && (\n                <li key={key}>{`${key}: ${activeContact[key]}`}</li>\n              )\n          )}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactCard;\n","import { OvalLoader } from 'components/common/Loader/OvalLoader';\n\nimport { useAuth, useContacts } from 'utils/hooks';\nimport { FlexWrapper } from 'components/common/FlexWrapper/FlexWrapper';\nimport { Container } from 'components/common/Container/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ContactCard from 'components/ContactCard/ContactCard';\n\nconst Contacts = () => {\n  const { userId } = useAuth();\n  const { activeContact, isLoading } = useContacts();\n\n  const title = userId === activeContact?.owner ? activeContact?.name : '';\n\n  return (\n    <FlexWrapper>\n      <Container pi=\"0\">\n        <Filter /> <br />\n        <ContactList />\n      </Container>\n\n      <Container t2={title}>\n        <ContactCard />\n      </Container>\n\n      {isLoading && <OvalLoader />}\n    </FlexWrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading","Div","styled","FlexWrapper","children","heightSize","fontSize","Button","Filter","selectFilterValue","dispatch","useDispatch","handleSearch","e","setFilterValue","target","value","type","name","placeholder","onChange","size","onClick","previousElementSibling","focus","List","ContactList","useEffect","fetchContactsThunk","activeEl","document","querySelector","classList","remove","_id","find","el","dataset","id","setActiveContact","add","filtredContacts","filter","toLowerCase","includes","handleClick","map","contact","deleteContactThunk","userId","useAuth","shouldRender","owner","off","link","phone","href","icon","email","whatsapp","telegram","viber","linkedin","github","address","split","join","Object","keys","key","rel","title","Container","pi","t2","OvalLoader"],"sourceRoot":""}