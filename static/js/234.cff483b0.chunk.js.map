{"version":3,"file":"static/js/234.cff483b0.chunk.js","mappings":"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","sources":["components/AuthForms/AuthBtns/AuthBtns.styled.jsx","components/AuthForms/AuthBtns/GoogleBtn.jsx","components/AuthForms/AuthBtns/SignBtn.jsx","components/AuthForms/AuthForms.styled.jsx","components/common/Link/Link.styled.jsx","components/common/Link/Link.jsx","components/AuthForms/SigninForm.jsx","pages/Signin.jsx","utils/constants/contactFields.js","utils/constants/regExp.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst Button = css`\n  height: 41px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n\n  @media screen and (width >= 768px) {\n    font-size: 16px;\n  }\n\n  border: 1px solid;\n  border-radius: ${themes.radius.s};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n`;\n\nexport const SignButton = styled.button`\n  ${Button};\n\n  margin-top: 30px;\n\n  font-weight: 700;\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.white};\n  background-color: ${themes.colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.hovered};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.accent};\n    background-color: ${themes.colors.accent};\n  }\n`;\n\nexport const IconLink = styled.a`\n  ${Button};\n\n  margin-top: 18px;\n  padding-inline: 10px;\n\n  font-weight: 400;\n  border-color: ${themes.colors.border};\n  color: ${themes.colors.black};\n  background-color: ${themes.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.ligthBlue};\n  }\n\n  & pre {\n    font-size: 12px;\n  }\n`;\n","import { FcGoogle } from 'react-icons/fc';\nimport { MdArrowForwardIos } from 'react-icons/md';\n\nimport { baseURL } from 'servises/baseURL';\nimport Container from 'components/common/Container/Container';\nimport { IconLink } from './AuthBtns.styled';\n\nexport const GoogleBtn = () => (\n  <IconLink href={`${baseURL}/auth/google`}>\n    <Container p=\"0\" d=\"flex\" ai=\"center\" jc=\"space-between\">\n      <FcGoogle size=\"20px\" />\n      Sign in with Google\n      <MdArrowForwardIos size=\"16px\" />\n    </Container>\n  </IconLink>\n);\n","import PropTypes from 'prop-types';\n\nimport { SignButton } from './AuthBtns.styled';\n\nexport const SignBtn = ({ onClick, disabled, children }) => {\n  return (\n    <SignButton onClick={onClick} type=\"submit\" disabled={disabled}>\n      {children}\n    </SignButton>\n  );\n};\n\nSignButton.propTepes = {\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.oneOf(['img', 'png', 'svg']),\n  ]),\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage as FormikError } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n\n  border-radius: ${themes.radius.m};\n  background-color: ${themes.colors.white};\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 5px;\n  font-size: 16px;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  font-weight: 400;\n\n  color: ${themes.colors.failed};\n`;\n\nexport const Div = styled.div`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  & h2 {\n    margin: 0 0 0 0;\n    font-size: 24px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { themes } from 'styles/themes';\n\nexport const RouteLink = styled(Link)`\n  color: ${themes.colors.accent};\n  text-decoration: underline;\n  text-align: ${({ ta }) => ta};\n  font-weight: 400;\n`;\n","import PropTypes from 'prop-types';\n\nimport { RouteLink } from './Link.styled';\n\nconst Link = ({ to, ta, children }) => {\n  return (\n    <RouteLink to={to} ta={ta}>\n      {children}\n    </RouteLink>\n  );\n};\n\nexport default Link;\n\nLink.propTypes = {\n  to: PropTypes.string,\n  ta: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n","import { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport Link from 'components/common/Link/Link';\nimport { SignBtn } from './AuthBtns/SignBtn';\nimport { GoogleBtn } from './AuthBtns/GoogleBtn';\nimport { loginThunk } from 'store/auth/authOperations';\nimport { Form, Field, Label } from 'components/AuthForms/AuthForms.styled';\nimport { ErrorMessage, Div } from 'components/AuthForms/AuthForms.styled';\nimport { signinSchema } from 'utils/validation';\n\nconst initialValues = { email: '', password: '' };\n\nconst SigninForm = () => {\n  const dispatch = useDispatch();\n\n  const isDisabled = ({ errors, values }) => {\n    const { email, password } = values;\n    return Object.keys(errors).length || !email || !password;\n  };\n\n  const onSubmit = (values, actions) => {\n    dispatch(loginThunk(values));\n    // .unwrap().then(pld => console.log(pld)).catch(err => console.log(err));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={signinSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Div>\n            <h2>Sign in</h2>\n            <Link to=\"/signup\">Don't have an account?</Link>\n          </Div>\n\n          {Object.keys(initialValues).map(key => (\n            <Fragment key={key}>\n              <Label>\n                {key} <ErrorMessage name={key} component=\"span\" />\n              </Label>\n              <Field type={key} name={key} />\n            </Fragment>\n          ))}\n\n          <SignBtn disabled={isDisabled({ values, errors })}>Sign in</SignBtn>\n\n          <GoogleBtn />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SigninForm;\n","import Container from 'components/common/Container/Container';\nimport SigninForm from 'components/AuthForms/SigninForm';\n\nconst Signin = () => (\n  <Container w=\"400px\" h=\"100vh\" p=\"0\" d=\"flex\" fd=\"column\" jc=\"center\">\n    <SigninForm />\n  </Container>\n);\n\nexport default Signin;\n","export const RENDER_FIELDS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const FORM_FIELDS = ['firstName', 'lastName', ...RENDER_FIELDS];\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'only letters and numbers,  more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'https://linkedin.com',\n  regExp:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const GITHUB = {\n  msg: 'https://...github',\n  regExp:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const DATE = {\n  msg: 'dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const ADDRESS = {\n  msg: 'only letters, numbers, commas, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","import { object, string } from 'yup';\n\nimport { NAME, EMAIL } from 'utils/constants';\n\nconst name = string()\n  .min(4, 'is too short')\n  .matches(NAME.regExp, NAME.msg)\n  .required('is required');\nconst email = string().matches(EMAIL.regExp, EMAIL.msg).required('is required');\nconst password = string().min(4, 'is too short').required('is required');\n\nexport const signupSchema = object().shape({ name, email, password });\nexport const signinSchema = object().shape({ email, password });\n","import { object, string } from 'yup';\n\nimport { NAME, PHONE, EMAIL, TELEGRAM } from 'utils/constants';\nimport { DATE, ADDRESS, LINKEDIN, GITHUB } from 'utils/constants';\n\nexport const contactSchema = object().shape({\n  firstName: string().matches(NAME.regExp, NAME.msg).required('Required'),\n  lastName: string().matches(NAME.regExp, NAME.msg),\n  phone: string().matches(PHONE.regExp, PHONE.msg).required('Required'),\n  email: string().matches(EMAIL.regExp, EMAIL.msg),\n  whatsapp: string().matches(PHONE.regExp, PHONE.msg),\n  viber: string().matches(PHONE.regExp, PHONE.msg),\n  telegram: string().matches(TELEGRAM.regExp, TELEGRAM.msg),\n  linkedin: string().matches(LINKEDIN.regExp, LINKEDIN.msg),\n  github: string().matches(GITHUB.regExp, GITHUB.msg),\n  address: string().matches(ADDRESS.regExp, ADDRESS.msg),\n  birthday: string().matches(DATE.regExp, DATE.msg),\n  notes: string(),\n});\n"],"names":["Button","css","themes","SignButton","styled","IconLink","GoogleBtn","href","baseURL","p","d","ai","jc","size","SignBtn","onClick","disabled","children","type","PropTypes","Form","FormikForm","Field","FormikField","Label","ErrorMessage","FormikError","Div","RouteLink","Link","ta","to","initialValues","email","password","dispatch","useDispatch","isDisabled","errors","values","Object","keys","length","validationSchema","signinSchema","onSubmit","actions","loginThunk","resetForm","map","key","Fragment","name","component","Container","w","h","fd","RENDER_FIELDS","FORM_FIELDS","NAME","msg","regExp","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","string","min","matches","required","signupSchema","object","shape","contactSchema","firstName","lastName","phone","whatsapp","viber","telegram","linkedin","github","address","birthday","notes"],"sourceRoot":""}