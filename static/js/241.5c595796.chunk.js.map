{"version":3,"file":"static/js/241.5c595796.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactCard/ContactCard.styled.jsx","components/ContactCard/ContactCard.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage.jsx","utils/constants/regExp.js","utils/constants/renderFields.js","utils/hooks/useContacts.js","utils/hooks/useAbbreviation.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst heightSize = '30px';\nconst fontSize = '14px';\n\nexport const Div = styled.div`\n  width: 100%;\n  position: relative;\n  display: inline-block;\n\n  input {\n    width: 100%;\n    height: ${heightSize};\n    padding-inline: ${heightSize};\n\n    border: 1px solid ${themes.colors.border};\n    border-radius: ${themes.radius.s};\n    outline: transparent;\n    transition: border-color 250ms;\n\n    &:hover,\n    &:focus {\n      border-color: ${themes.colors.hovered};\n    }\n\n    &::placeholder {\n      width: fit-content;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n      transition: left 300ms, transform 300ms;\n      font-size: ${fontSize};\n    }\n\n    &:focus::placeholder {\n      left: 0;\n      transform: translateX(${heightSize});\n    }\n\n    & + svg {\n      position: absolute;\n      top: 50%;\n      left: calc(50% - 2.5 * ${fontSize});\n      transform: translate(-50%, -50%);\n      transition: left 300ms, transform 300ms, fill 300ms;\n      cursor: text;\n    }\n\n    &:focus + svg,\n    &:not(:placeholder-shown) + svg {\n      left: calc(${heightSize} * 0.55);\n      fill: ${themes.colors.accent};\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 18px;\n  height: 18px;\n\n  position: absolute;\n  top: 50%;\n  right: calc(${heightSize} * 0.55);\n\n  transform: translate(50%, -50%);\n  border: 1px solid transparent;\n  border-radius: 50%;\n  background-color: ${themes.colors.border};\n  color: ${themes.colors.white};\n  font-weight: 700;\n  font-size: 12px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { Div, Button } from './Filter.styled';\nimport { selectFilterValue } from 'store/seletors';\nimport { setFilterValue } from 'store/contacts/contactsSlice';\n\nconst Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleClick = e => e.target.previousElementSibling.focus();\n  const handleSearch = e => dispatch(setFilterValue(e.target.value));\n\n  return (\n    <Div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        value={filterValue}\n        onChange={handleSearch}\n      />\n      <BsSearch size=\"16\" onClick={handleClick} />\n      {filterValue && <Button onClick={handleSearch}>✕</Button>}\n    </Div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nimport { themes } from 'styles/themes';\n\nexport const List = styled.ul`\n  width: 100%;\n  margin-top: 10px;\n  padding: 0;\n  display: inline-flex;\n  flex-direction: column;\n\n  font-weight: 500;\n  counter-reset: section;\n  list-style-type: none;\n\n  li {\n    display: inline-flex;\n    padding: 3px 6px 1px;\n\n    gap: 5px;\n    cursor: pointer;\n    transition: color 250ms;\n\n    &:hover,\n    &:focus {\n      color: ${themes.colors.hovered};\n    }\n\n    &::before {\n      counter-increment: section;\n      content: counters(section, '.') '.';\n    }\n  }\n\n  & .active {\n    background-color: ${themes.colors.accent};\n    color: ${themes.colors.white};\n\n    &:hover,\n    &:focus {\n      color: ${themes.colors.white};\n      cursor: default;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { List } from './ContactList.styled';\nimport { fetchContactsThunk } from 'store/contacts/contactsOperations';\nimport { setActiveContact } from 'store/contacts/contactsSlice';\nimport { useContacts } from 'utils/hooks';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts, activeContact, filterValue } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // remove previous '.active' class\n    let activeEl = document.querySelector('li[data-id].active');\n    activeEl?.classList.remove('active');\n    // set '.active' class\n    activeEl = activeContact\n      ? document.querySelector(`li[data-id=\"${activeContact._id}\"]`)\n      : document.querySelector('li[data-id]');\n    activeEl?.classList.add('active');\n    // setActiveContact\n    const contact = activeEl\n      ? contacts.find(el => el._id === activeEl.dataset.id)\n      : null;\n\n    dispatch(setActiveContact(contact));\n  }, [activeContact, contacts, dispatch]);\n\n  const filtredContacts = contacts.filter(el => {\n    const value = filterValue.toLowerCase();\n    return (\n      el.firstName.toLowerCase().includes(value) ||\n      el.lastName.toLowerCase().includes(value)\n    );\n  });\n\n  const handleClick = e => {\n    const { id } = e.target.dataset;\n    const activeContact = contacts.find(el => el._id === id);\n    dispatch(setActiveContact(activeContact));\n  };\n\n  return (\n    <List>\n      {filtredContacts.map(el => (\n        <li key={el._id} data-id={el._id} onClick={handleClick}>\n          {el.firstName} {el.lastName}\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Div = styled.div`\n  margin-bottom: 15px;\n  margin-left: 22%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 10px;\n\n  & a {\n    padding: 3px;\n    width: 26px;\n    height: 26px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    border-radius: 50%;\n    border: 1px solid ${themes.colors.border};\n    background-color: ${themes.colors.white};\n    transition: border-color 250ms, background-color 250ms;\n\n    &:hover,\n    &:focus {\n      cursor: pointer;\n      border-color: ${themes.colors.hovered};\n      background-color: ${themes.colors.ligthBlue};\n    }\n\n    & svg {\n      fill: ${themes.colors.hovered};\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 10px;\n\n  list-style: none;\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  & li {\n    padding-block: 5px;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-column-gap: 20px;\n\n    & span {\n      &:nth-of-type(1) {\n        text-align: right;\n\n        color: ${themes.colors.placeholder};\n\n        @media screen and (width < 768px) {\n          letter-spacing: -1px;\n        }\n      }\n      &:nth-of-type(2) {\n        text-align: left;\n      }\n    }\n\n    &:not(:last-of-type) {\n      border-bottom: 1px solid ${themes.colors.border};\n    }\n  }\n\n  & + div {\n    padding-left: 22%;\n\n    @media screen and (width >= 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { BsTelephone, BsEnvelope, BsWhatsapp, BsGithub } from 'react-icons/bs';\nimport { LiaTelegram, LiaViber, LiaLinkedinIn } from 'react-icons/lia';\nimport { PiMapPinFill } from 'react-icons/pi';\n\nimport Button from 'components/shared/Button/Button';\nimport { useContacts } from 'utils/hooks';\nimport { CONTACT_CREDENTIALS } from 'utils/constants';\nimport { deleteContactThunk } from 'store/contacts/contactsOperations';\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport { Div, List } from './ContactCard.styled';\n\nconst ContactCard = ({ triggerForm }) => {\n  const dispatch = useDispatch();\n  const { activeContact } = useContacts();\n\n  const link = {\n    phone: {\n      href: `tel:${activeContact?.phone}`,\n      icon: <BsTelephone size=\"14\" />,\n    },\n    email: {\n      href: `mailto:${activeContact?.email}`,\n      icon: <BsEnvelope size=\"14\" />,\n    },\n    whatsapp: {\n      href: `https://wa.me/${activeContact?.whatsapp}`,\n      icon: <BsWhatsapp size=\"14\" />,\n    },\n    viber: {\n      href: `viber://chat?number:+${activeContact?.viber}`,\n      icon: <LiaViber size=\"20\" />,\n    },\n    telegram: {\n      href: `https://t.me/${activeContact?.telegram.replace('@', '')}`,\n      icon: <LiaTelegram size=\"16\" />,\n    },\n    linkedin: {\n      href: activeContact?.linkedin,\n      icon: <LiaLinkedinIn size=\"20\" />,\n    },\n    github: { href: activeContact?.github, icon: <BsGithub size=\"16\" /> },\n    address: {\n      href:\n        activeContact?.address &&\n        'https://www.google.com/maps/search/' +\n          `${activeContact?.address.split(/\\s+/).join('+')}`,\n      icon: <PiMapPinFill size=\"16\" />,\n    },\n  };\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContactThunk(activeContact._id));\n    // .unwrap().then(pld => console.log(pld)).catch(err => console.log(err));\n  };\n\n  return (\n    <>\n      <Div>\n        {activeContact &&\n          Object.keys(link).map(\n            key =>\n              activeContact[key] && (\n                <a\n                  href={link[key].href}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  key={link[key].href}\n                >\n                  {link[key].icon}\n                </a>\n              )\n          )}\n      </Div>\n\n      <List>\n        {activeContact &&\n          Object.keys(activeContact).map(\n            key =>\n              CONTACT_CREDENTIALS.includes(key) &&\n              activeContact[key] && (\n                <li key={key}>\n                  <span>{`${key}`}:</span>\n                  <span>{`${activeContact[key]}`}</span>\n                </li>\n              )\n          )}\n      </List>\n\n      <GridWrap mm=\"40px\" cg=\"3vw\">\n        <Button onClick={() => triggerForm('add')}>Add</Button>\n        <Button disabled={!activeContact} onClick={() => triggerForm('edit')}>\n          Edit\n        </Button>\n        <Button disabled={!activeContact} onClick={handleDeleteContact}>\n          Delete\n        </Button>\n      </GridWrap>\n    </>\n  );\n};\n\nexport default ContactCard;\n\nContactCard.propTypes = { triggerForm: PropTypes.func.isRequired };\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  & #grid {\n    padding-left: 22%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n\n  /* dynamic input width */\n  & #first,\n  & #last,\n  span {\n    padding: 0;\n    font-size: 16px;\n    font-weight: 700;\n    font-family: 'Montserrat', sans-serif;\n\n    @media screen and (width >= 768px) {\n      font-size: 20px;\n    }\n\n    @media screen and (width >= 1280px) {\n      font-size: 26px;\n    }\n\n    &::placeholder {\n      color: ${themes.colors.placeholder};\n    }\n\n    &:first-of-type {\n      margin: 10px 0 10px 22%;\n    }\n  }\n\n  & #first {\n    width: ${({ fnw }) => `${fnw}px`};\n  }\n\n  & #last {\n    width: ${({ lnw }) => `${lnw}px`};\n  }\n\n  & .wrapper:not(:nth-last-of-type(2)) {\n    border-bottom: 1px solid ${themes.colors.border};\n  }\n\n  & span {\n    position: absolute;\n    left: 100%;\n    bottom: 0;\n    color: transparent;\n  }\n`;\n\nexport const Label = styled.label`\n  padding-block: 2px;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-column-gap: 20px;\n  text-align: right;\n  align-items: center;\n\n  color: ${themes.colors.placeholder};\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  @media screen and (width < 768px) {\n    letter-spacing: -1px;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  padding-block: 3px;\n  text-align: left;\n  background-color: transparent;\n\n  border: 1px solid transparent;\n  outline: transparent;\n  font-family: 'Roboto', sans-serif;\n  font-size: 12px;\n  color: ${themes.colors.black};\n  transition: border-color 250ms;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0px 1000px transparent inset;\n  }\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-left: 22%;\n  padding-bottom: 5px;\n  font-size: 12px;\n  font-family: 'Roboto', sans-serif;\n  color: ${themes.colors.error};\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Button from 'components/shared/Button/Button';\nimport { CONTACT_CREDENTIALS, CONTACT_FIELDS } from 'utils/constants';\nimport { useContacts } from 'utils/hooks';\nimport { addContactThunk } from 'store/contacts/contactsOperations';\nimport { updateContactThunk } from 'store/contacts/contactsOperations';\nimport { contactSchema } from 'utils/validation';\nimport { Form, Field, Label, ErrorMsg } from './ContactForm.styled';\n\nconst initialValues = {};\n\nconst ContactForm = ({ triggerForm, isContactForm }) => {\n  const dispatch = useDispatch();\n  const { contacts, activeContact } = useContacts();\n  const [width, setWidth] = useState({ firstName: null, lastName: null });\n\n  const spanEl = document.querySelector('span');\n  const getWidth = el => el.getBoundingClientRect().width + 8;\n  const getInitialValues = bool => {\n    CONTACT_FIELDS.forEach(\n      key => (initialValues[key] = bool === 'edit' ? activeContact[key] : '')\n    );\n    return initialValues;\n  };\n\n  useEffect(() => {\n    const { firstName, lastName } = initialValues;\n    const firstSpanEl = document.querySelector('.first-name');\n    const lastSpanEl = document.querySelector('.last-name');\n    firstSpanEl.innerHTML = firstName ? firstName : 'Name';\n    lastSpanEl.innerHTML = lastName ? lastName : 'Surname';\n    setWidth(prevState => ({ ...prevState, firstName: getWidth(firstSpanEl) }));\n    setWidth(prevState => ({ ...prevState, lastName: getWidth(lastSpanEl) }));\n  }, []);\n\n  const onChange = e => {\n    const { name, value, placeholder } = e.target;\n    spanEl.innerHTML = value ? value : placeholder;\n    setWidth(prevState => ({ ...prevState, [name]: getWidth(spanEl) }));\n  };\n\n  const onSubmit = (values, actions) => {\n    const { firstName } = values;\n    const isInContacts = contacts.some(\n      el => el.firstName.toLowerCase() === firstName.toLowerCase()\n    );\n    if (isInContacts && isContactForm === 'add') {\n      return alert(`${firstName} is already in contacts!`);\n    }\n\n    dispatch(\n      isContactForm === 'add'\n        ? addContactThunk(values)\n        : updateContactThunk({ id: activeContact._id, contact: values })\n    );\n    // .unwrap().then(pld => console.log(pld)).catch(err => console.log(err));\n    triggerForm(false);\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={getInitialValues(isContactForm)}\n      validationSchema={contactSchema}\n      onSubmit={onSubmit}\n    >\n      <Form onChange={onChange} fnw={width.firstName} lnw={width.lastName}>\n        <ErrorMsg name=\"firstName\" component=\"div\" />\n        <ErrorMsg name=\"lastName\" component=\"div\" />\n        <Field id=\"first\" type=\"text\" name=\"firstName\" placeholder=\"Name\" />\n        <Field id=\"last\" type=\"text\" name=\"lastName\" placeholder=\"Surname\" />\n\n        {CONTACT_CREDENTIALS.map(key => (\n          <div className=\"wrapper\" key={key}>\n            <Label>\n              {key}:\n              <Field type=\"text\" name={key} />\n            </Label>\n            <ErrorMsg name={key} component=\"div\" />\n          </div>\n        ))}\n\n        <GridWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n          <Button type=\"submit\">Save</Button>\n          <Button type=\"button\" onClick={() => triggerForm(false)}>\n            Cancel\n          </Button>\n        </GridWrap>\n\n        <span></span>\n        <span className=\"first-name\"></span>\n        <span className=\"last-name\"></span>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = { triggerForm: PropTypes.func.isRequired };\n","import { useState, useEffect } from 'react';\n\nimport { useAuth, useContacts } from 'utils/hooks';\nimport OvalLoader from 'components/shared/Loader/OvalLoader';\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Container from 'components/shared/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactCard from 'components/ContactCard/ContactCard';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst ContactsPage = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isContactForm, setIsContactForm] = useState(false);\n  const { user } = useAuth();\n  const { activeContact, isLoading } = useContacts();\n\n  const title =\n    !isLoading && user._id === activeContact?.owner\n      ? `${activeContact?.firstName} ${activeContact?.lastName}`\n      : '';\n\n  const gridHeight = window.innerHeight > 600 ? 'calc(100vh - 90px)' : '510px';\n  const headerEl = document.querySelector('header');\n\n  useEffect(() => {\n    setIsMobile(headerEl?.clientWidth <= 300);\n\n    window.addEventListener('resize', e => {\n      setIsMobile(headerEl?.clientWidth <= 300);\n    });\n    return () => {\n      window.removeEventListener('resize', e => {\n        setIsMobile(headerEl?.clientWidth <= 300);\n      });\n    };\n  }, [headerEl]);\n\n  const triggerForm = bool => {\n    setIsContactForm(bool);\n  };\n\n  return (\n    <GridWrap h={gridHeight} gtc=\"2fr 3fr\">\n      <Container p=\"0\" t1=\"Contacts\">\n        <Filter /> <br />\n        <ContactList />\n      </Container>\n\n      {isContactForm && (\n        <ContactForm triggerForm={triggerForm} isContactForm={isContactForm} />\n      )}\n\n      {!isContactForm && !isMobile && (\n        <Container p=\"0\" mt=\"10px 0 10px 22%\" t2={title}>\n          {!isLoading && <ContactCard triggerForm={triggerForm} />}\n        </Container>\n      )}\n\n      {isLoading && <OvalLoader />}\n    </GridWrap>\n  );\n};\n\nexport default ContactsPage;\n","const NAME = {\n  name: 'NAME',\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  pattern: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst EMAIL = {\n  name: 'EMAIL',\n  msg: 'test@test.com, test@test.ua',\n  pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nconst PHONE = {\n  name: 'PHONE',\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  pattern: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nconst TELEGRAM = {\n  name: 'TELEGRAM',\n  msg: 'only letters and numbers,  more than five, start with @',\n  pattern: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nconst TELEGRAM_PHONE = {\n  name: 'TELEGRAM_PHONE',\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  pattern:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nconst HTTP_LINK = {\n  name: 'HTTP_LINK',\n  msg: 'http(s)://...',\n  pattern:\n    /^(http(s?):\\/\\/)?(www\\.)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst LINKEDIN = {\n  name: 'LINKEDIN',\n  msg: 'http(s)://linkedin.com',\n  pattern:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst GITHUB = {\n  name: 'GITHUB',\n  msg: 'http(s)://...github',\n  pattern:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst DATE = {\n  name: 'DATE',\n  msg: 'dd-mm-yyyy',\n  pattern:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nconst ADDRESS = {\n  name: 'ADDRESS',\n  msg: 'only letters, numbers, commas, dashes, spases',\n  pattern:\n    /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport {\n  NAME,\n  EMAIL,\n  PHONE,\n  TELEGRAM,\n  TELEGRAM_PHONE,\n  HTTP_LINK,\n  LINKEDIN,\n  GITHUB,\n  DATE,\n  ADDRESS,\n};\n","export const CONTACT_CREDENTIALS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const CONTACT_FIELDS = ['firstName', 'lastName', ...CONTACT_CREDENTIALS];\n\nexport const USER_CREDENTIALS = [\n  'name',\n  'email',\n  'whatsApp',\n  'telegram',\n  'location',\n  'socialLink',\n  'birthday',\n  'about',\n];\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","export const useAbbreviation = text => {\n  const abbreviation = text\n    .replace('-', ' ')\n    .split(/\\s+/)\n    .reduce((acc, el) => acc + el.at(0).toUpperCase(), '')\n    .substring(0, 3);\n\n  return abbreviation;\n};\n","import * as Yup from 'yup';\n\nimport { regExp } from 'utils/constants';\n\nconst pattern = regExp => [regExp.pattern, regExp.msg];\n\nconst name = Yup.string()\n  .min(4, 'is too short')\n  .required('is required')\n  .matches(...pattern(regExp.NAME));\nconst email = Yup.string()\n  .required('is required')\n  .matches(...pattern(regExp.EMAIL));\nconst password = Yup.string().min(6, 'is too short').required('is required');\nconst code = Yup.number().required('is required').typeError('must be a number');\n\nexport const signupSchema = Yup.object().shape({ name, email, password });\nexport const signinSchema = Yup.object().shape({ email, password });\nexport const verifySchema = Yup.object().shape({ verificationCode: code });\nexport const forgotSchema = Yup.object().shape({ email });\nexport const resetSchema = Yup.object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([Yup.ref('newPass')], 'must match'),\n});\n","import * as Yup from 'yup';\n\nimport { regExp } from 'utils/constants';\n\nconst pattern = regExp => [regExp.pattern, regExp.msg];\n\nexport const contactSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Required')\n    .matches(...pattern(regExp.NAME)),\n  lastName: Yup.string().matches(...pattern(regExp.NAME)),\n  phone: Yup.string()\n    .required('Required')\n    .matches(...pattern(regExp.PHONE)),\n  email: Yup.string().matches(...pattern(regExp.EMAIL)),\n  whatsapp: Yup.string().matches(...pattern(regExp.PHONE)),\n  viber: Yup.string().matches(...pattern(regExp.PHONE)),\n  telegram: Yup.string().matches(...pattern(regExp.TELEGRAM)),\n  linkedin: Yup.string().matches(...pattern(regExp.LINKEDIN)),\n  github: Yup.string().matches(...pattern(regExp.GITHUB)),\n  address: Yup.string().matches(...pattern(regExp.ADDRESS)),\n  birthday: Yup.string().matches(...pattern(regExp.DATE)),\n  notes: Yup.string(),\n});\n"],"names":["heightSize","fontSize","Div","styled","themes","Button","filterValue","useSelector","selectFilterValue","dispatch","useDispatch","handleSearch","e","setFilterValue","target","value","type","name","placeholder","onChange","size","onClick","previousElementSibling","focus","List","useContacts","contacts","activeContact","useEffect","fetchContactsThunk","activeEl","document","querySelector","classList","remove","_id","add","contact","find","el","dataset","id","setActiveContact","filtredContacts","filter","toLowerCase","firstName","includes","lastName","handleClick","map","triggerForm","link","phone","href","icon","email","whatsapp","viber","telegram","replace","linkedin","github","address","split","join","Object","keys","key","rel","CONTACT_CREDENTIALS","GridWrap","mm","cg","disabled","deleteContactThunk","Form","FormikForm","fnw","lnw","Label","Field","FormikField","ErrorMsg","ErrorMessage","initialValues","isContactForm","useState","width","setWidth","spanEl","getWidth","getBoundingClientRect","firstSpanEl","lastSpanEl","innerHTML","prevState","bool","CONTACT_FIELDS","validationSchema","contactSchema","onSubmit","values","actions","some","alert","addContactThunk","updateContactThunk","resetForm","component","className","gtc","isMobile","setIsMobile","setIsContactForm","user","useAuth","isLoading","title","owner","gridHeight","window","innerHeight","headerEl","clientWidth","addEventListener","removeEventListener","h","Container","p","t1","mt","t2","OvalLoader","NAME","msg","pattern","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","USER_CREDENTIALS","selectors","error","useAbbreviation","text","reduce","acc","at","toUpperCase","substring","regExp","Yup","min","required","matches","password","code","typeError","signupSchema","shape","signinSchema","verifySchema","verificationCode","forgotSchema","resetSchema","newPass","confirmPass","oneOf","birthday","notes"],"sourceRoot":""}