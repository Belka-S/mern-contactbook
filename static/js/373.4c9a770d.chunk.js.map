{"version":3,"file":"static/js/373.4c9a770d.chunk.js","mappings":"0QAIaA,EAAMC,EAAAA,GAAAA,IAAH,6dAUDC,EAAAA,EAAAA,OAAAA,aAoBFC,EAASF,EAAAA,GAAAA,IAAH,8VAWGC,EAAAA,EAAAA,OAAAA,OAEAA,EAAAA,EAAAA,OAAAA,O,UCUtB,EA/CoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KACb,GAAoCA,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,cAEZC,EAAeF,EAClBG,QAAQ,IAAK,KACbC,MAAM,OACNC,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,EAAGC,GAAG,GAAGC,aAA5B,GAA2C,IAClDC,UAAU,EAAG,GAOhB,OACE,UAAClB,EAAD,YACE,SAACG,EAAD,CAAQgB,MAAO,CAAEC,gBAAgB,OAAD,OAASX,EAAT,MAAhC,UACIA,GAAiBC,KAGrB,SAACW,EAAA,EAAD,CAAUC,GAAG,OAAOC,GAAG,IAAIC,IAAI,UAA/B,SACGC,EAAAA,GAAAA,KACC,SAAAV,GAAE,OACAT,EAAKS,KACH,UAAC,EAAAW,SAAD,YACE,4BAAOX,EAAGJ,QAAQ,OAAQ,IAA1B,QACA,0BACGI,EAAGY,SAAS,WACTrB,EAAKS,GAAIG,UAAU,EAAG,IACtBZ,EAAKS,OALEA,EAFjB,OAcN,UAACM,EAAA,EAAD,CAAUO,GAAG,OAAON,GAAG,MAAME,IAAI,cAAjC,WACE,SAACK,EAAA,EAAD,oBACA,oBACA,SAACA,EAAA,EAAD,CAAQC,QA9Bc,WACdC,OAAOC,QAAQ,qCACpB5B,GAAS6B,EAAAA,EAAAA,MACjB,EA2BK,yBAIP,ECxCD,EAXoB,WAClB,IAAMC,EAAaH,OAAOI,YAAc,IAAM,qBAAuB,QAErE,OACE,UAACd,EAAA,EAAD,CAAUe,EAAGF,EAAYV,IAAI,UAA7B,WACE,qCACA,SAAC,EAAD,MAGL,C,uSCbM,IAAMa,EAAiB,CAC5B,QACA,QACA,WACA,QACA,WACA,WACA,SACA,UACA,WACA,SAGWC,EAAW,CAAI,YAAa,YAAjB,OAAgCD,GCb3CZ,EAAc,CACzB,WACA,YACA,eACA,eACA,eACA,iBACA,eACA,YACA,iBCTWc,EAAO,CAClBC,IAAK,qDACLC,OAAQ,+HAGGC,EAAQ,CACnBF,IAAK,8BACLC,OAAQ,mDAGGE,EAAQ,CACnBH,IAAK,6DACLC,OAAQ,4DAGGG,EAAW,CACtBJ,IAAK,0DACLC,OAAQ,sDASGI,EAAW,CACtBL,IAAK,uBACLC,OACE,oJAGSK,EAAS,CACpBN,IAAK,oBACLC,OACE,8HAGSM,EAAO,CAClBP,IAAK,aACLC,OACE,4EAGSO,EAAU,CACrBR,IAAK,gDACLC,OAAQ,kI,kHC3CGQ,EAAc,WAOzB,MAAO,CAAEC,UANQC,EAAAA,EAAAA,IAAYC,EAAAA,IAMVC,eALGF,EAAAA,EAAAA,IAAYC,EAAAA,IAKAE,aAJdH,EAAAA,EAAAA,IAAYC,EAAAA,IAIeG,OAHjCJ,EAAAA,EAAAA,IAAYC,EAAAA,IAG4BI,WAFpCL,EAAAA,EAAAA,IAAYC,EAAAA,IAG/B,C","sources":["components/ProfileCard/ProfileCard.styled.jsx","components/ProfileCard/ProfileCard.jsx","pages/ProfilePage.jsx","utils/constants/contactFields.js","utils/constants/userFields.js","utils/constants/regExp.js","utils/hooks/useContacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { themes } from 'styles/themes';\n\nexport const Div = styled.div`\n  position: relative;\n\n  & span {\n    padding-block: 5px;\n    font-size: 20px;\n    font-weight: 500;\n\n    &:nth-of-type(2n + 1) {\n      text-align: end;\n      color: ${themes.colors.placeholder};\n\n      &::first-letter {\n        text-transform: lowercase;\n      }\n    }\n  }\n\n  & #grid:last-of-type {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 200px;\n  height: 200px;\n  margin: 12px 0 20px 3vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Averia Sans Libre', sans-serif;\n  font-size: 72px;\n  font-weight: 700;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 50%;\n  background-color: ${themes.colors.white};\n  background-size: cover;\n`;\n","import { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Button from 'components/shared/Button/Button';\nimport { useAuth } from 'utils/hooks';\nimport { deleteThunk } from 'store/auth/authOperations';\nimport { USER_FIELDS } from 'utils/constants';\nimport { Avatar, Div } from './ProfileCard.styled';\n\nconst ProfileCard = () => {\n  const dispatch = useDispatch();\n  const user = useAuth();\n  const { userName, userAvatarUrl } = useAuth();\n\n  const abbreviation = userName\n    .replace('-', ' ')\n    .split(/\\s+/)\n    .reduce((acc, el) => acc + el.at(0).toUpperCase(), '')\n    .substring(0, 3);\n\n  const handleDeleteProfile = () => {\n    const del = window.confirm('Are you sure you want to delete?');\n    del && dispatch(deleteThunk());\n  };\n\n  return (\n    <Div>\n      <Avatar style={{ backgroundImage: `url(${userAvatarUrl})` }}>\n        {!userAvatarUrl && abbreviation}\n      </Avatar>\n\n      <GridWrap cg=\"20px\" rg=\"0\" gtc=\"1fr 4fr\">\n        {USER_FIELDS.map(\n          el =>\n            user[el] && (\n              <Fragment key={el}>\n                <span>{el.replace('user', '')}:</span>\n                <span>\n                  {el.includes('Created')\n                    ? user[el].substring(0, 10)\n                    : user[el]}\n                </span>\n              </Fragment>\n            )\n        )}\n      </GridWrap>\n\n      <GridWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n        <Button>Edit</Button>\n        <div></div>\n        <Button onClick={handleDeleteProfile}>Delete</Button>\n      </GridWrap>\n    </Div>\n  );\n};\n\nexport default ProfileCard;\n","// import Container from 'components/shared/Container/Container';\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport ProfileCard from 'components/ProfileCard/ProfileCard';\n\nconst ProfilePage = () => {\n  const gridHeight = window.innerHeight > 600 ? 'calc(100vh - 90px)' : '510px';\n\n  return (\n    <GridWrap h={gridHeight} gtc=\"2fr 3fr\">\n      <h1>Profile</h1>\n      <ProfileCard />\n    </GridWrap>\n  );\n};\n\nexport default ProfilePage;\n","export const CONTACT_FIELDS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const FORM_FIELDS = ['firstName', 'lastName', ...CONTACT_FIELDS];\n","export const USER_FIELDS = [\n  'userName',\n  'userEmail',\n  'userWhatsApp',\n  'userTelegram',\n  'userLocation',\n  'userSocialLink',\n  'userBirthday',\n  'userAbout',\n  'userCreatedAt',\n];\n\nexport const USER_CREDENTIALS = [\n  'name',\n  'email',\n  'whatsApp',\n  'telegram',\n  'location',\n  'socialLink',\n  'birthday',\n  'about',\n];\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'only letters and numbers,  more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'https://linkedin.com',\n  regExp:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const GITHUB = {\n  msg: 'https://...github',\n  regExp:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const DATE = {\n  msg: 'dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const ADDRESS = {\n  msg: 'only letters, numbers, commas, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n"],"names":["Div","styled","themes","Avatar","dispatch","useDispatch","user","useAuth","userName","userAvatarUrl","abbreviation","replace","split","reduce","acc","el","at","toUpperCase","substring","style","backgroundImage","GridWrap","cg","rg","gtc","USER_FIELDS","Fragment","includes","mm","Button","onClick","window","confirm","deleteThunk","gridHeight","innerHeight","h","CONTACT_FIELDS","FORM_FIELDS","NAME","msg","regExp","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading"],"sourceRoot":""}