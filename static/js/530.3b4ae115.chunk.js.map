{"version":3,"file":"static/js/530.3b4ae115.chunk.js","mappings":"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","sources":["components/AuthForms/AuthBtns/AuthBtns.styled.jsx","components/AuthForms/AuthBtns/GoogleBtn.jsx","components/AuthForms/AuthBtns/SignBtn.jsx","components/AuthForms/AuthForms.styled.jsx","components/AuthForms/AuthLinks/Link.styled.jsx","components/AuthForms/AuthLinks/LinkRoute.jsx","components/AuthForms/VerifyForm.jsx","layouts/Modal/Modal.styled.jsx","layouts/Modal/Modal.jsx","components/AuthForms/SignupForm.jsx","pages/SignupPage.jsx","utils/constants/contactFields.js","utils/constants/regExp.js","utils/hooks/useContacts.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  height: 41px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n\n  @media screen and (width >= 768px) {\n    font-size: 16px;\n  }\n\n  border: 1px solid;\n  border-radius: ${themes.radius.s};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n`;\n\nexport const SignButton = styled.button`\n  ${CommonStyles};\n\n  margin-top: 30px;\n\n  font-weight: 700;\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.white};\n  background-color: ${themes.colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.hovered};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.accent};\n    background-color: ${themes.colors.accent};\n  }\n`;\n\nexport const IconLink = styled.a`\n  ${CommonStyles};\n\n  margin-top: 18px;\n  padding-inline: 10px;\n\n  font-weight: 400;\n  border-color: ${themes.colors.border};\n  color: ${themes.colors.black};\n  background-color: ${themes.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.ligthBlue};\n  }\n\n  & pre {\n    font-size: 12px;\n  }\n`;\n","import { FcGoogle } from 'react-icons/fc';\nimport { MdArrowForwardIos } from 'react-icons/md';\n\nimport { baseURL } from 'servises/baseURL';\nimport Container from 'components/common/Container/Container';\nimport { IconLink } from './AuthBtns.styled';\n\nconst GoogleBtn = () => (\n  <IconLink href={`${baseURL}/auth/google`}>\n    <Container p=\"0\" d=\"flex\" ai=\"center\" jc=\"space-between\">\n      <FcGoogle size=\"20px\" />\n      Sign in with Google\n      <MdArrowForwardIos size=\"16px\" />\n    </Container>\n  </IconLink>\n);\n\nexport default GoogleBtn;\n","import PropTypes from 'prop-types';\n\nimport { SignButton } from './AuthBtns.styled';\n\nconst SignBtn = ({ onClick, disabled, children }) => {\n  return (\n    <SignButton onClick={onClick} type=\"submit\" disabled={disabled}>\n      {children}\n    </SignButton>\n  );\n};\n\nexport default SignBtn;\n\nSignButton.propTepes = {\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.oneOf(['img', 'png', 'svg']),\n  ]),\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage as FormikError } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n\n  border-radius: ${themes.radius.m};\n  background-color: ${themes.colors.white};\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 5px;\n  font-size: 16px;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: baseline;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  & pre {\n    font-size: 10px;\n  }\n  // &::first-letter { text-transform: uppercase; }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  font-weight: 400;\n\n  color: ${themes.colors.failed};\n`;\n\nexport const Div = styled.div`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  & h2 {\n    margin: 0;\n\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { Link as RouteLink } from 'react-router-dom';\n\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  margin-left: auto;\n\n  color: ${themes.colors.accent};\n  text-decoration: underline;\n  font-family: 'Roboto', sans-serif;\n  font-size: ${({ fs = '14px' }) => fs};\n  font-weight: 400;\n`;\n\nexport const Link = styled(RouteLink)`\n  ${CommonStyles};\n`;\n\nexport const Btn = styled.button`\n  ${CommonStyles};\n\n  background-color: transparent;\n  border-color: transparent;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Link } from './Link.styled';\n\nconst LinkRoute = ({ to, fs, children }) => {\n  return (\n    <Link to={to} fs={fs}>\n      {children}\n    </Link>\n  );\n};\n\nexport default LinkRoute;\n\nLink.propTypes = {\n  to: PropTypes.string,\n  fs: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n","import { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport SignBtn from './AuthBtns/SignBtn';\nimport { Form, Field, Label } from 'components/AuthForms/AuthForms.styled';\nimport { ErrorMessage, Div } from 'components/AuthForms/AuthForms.styled';\nimport { verifySchema } from 'utils/validation';\nimport { useAuth } from 'utils/hooks';\nimport { refreshThunk, verifyThunk } from 'store/auth/authOperations';\n\nconst VerifyForm = () => {\n  const dispatch = useDispatch();\n  const { userEmail } = useAuth();\n\n  const isDisabled = ({ errors }) => Object.keys(errors).length;\n\n  const onSubmit = (values, actions) => {\n    dispatch(verifyThunk(values))\n      .unwrap() // .then(pld =>  console.log(pld))\n      .catch(err => console.log(err))\n      .then(() => dispatch(refreshThunk()));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ verificationCode: '' }}\n      validationSchema={verifySchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors }) => (\n        <Form>\n          <Div>\n            <h2>Verify: {userEmail}</h2>\n          </Div>\n\n          <Fragment>\n            <Label>\n              Code: <ErrorMessage name=\"verificationCode\" component=\"span\" />\n            </Label>\n            <Field type=\"text\" name=\"verificationCode\" />\n          </Fragment>\n\n          <SignBtn disabled={isDisabled({ errors })}>Submit</SignBtn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VerifyForm;\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n\n  background-color: ${themes.colors.backdrop};\n  backdrop-filter: blur(5px);\n\n  & > div {\n    min-width: 400px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n\n    transform: translate(-50%, -50%);\n\n    background-color: transparent; // ${themes.colors.white};\n    box-shadow: ${themes.shadows.modal};\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ onClick, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      e.key === 'Escape' && onClick();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClick]);\n\n  const handleBackdropClick = e => e.target === e.currentTarget && onClick();\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport LinkRoute from 'components/AuthForms/AuthLinks/LinkRoute';\nimport SignBtn from './AuthBtns/SignBtn';\nimport GoogleBtn from './AuthBtns/GoogleBtn';\nimport { registerThunk } from 'store/auth/authOperations';\nimport { Form, Field, Label } from 'components/AuthForms/AuthForms.styled';\nimport { ErrorMessage, Div } from 'components/AuthForms/AuthForms.styled';\nimport { signupSchema } from 'utils/validation';\n\nconst initialValues = { name: '', email: '', password: '' };\n\nconst SignupForm = ({ setIsVerify }) => {\n  const dispatch = useDispatch();\n\n  const isDisabled = ({ errors, values }) => {\n    const isError = Object.keys(errors).length;\n    const noValue = Object.keys(values).some(key => !values[key]);\n    return isError || noValue;\n  };\n\n  const onSubmit = (values, actions) => {\n    dispatch(registerThunk(values))\n      .unwrap()\n      .then(pld => setIsVerify(!pld.result.user.verifiedEmail))\n      .catch(err => console.log(err));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={signupSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Div>\n            <h2>Sign up</h2>\n            <LinkRoute to=\"/signin\">Have an account?</LinkRoute>\n          </Div>\n\n          {Object.keys(initialValues).map(key => (\n            <Fragment key={key}>\n              <Label>\n                {key.at(0).toUpperCase() + key.substring(1) + ':'}\n                <pre> </pre>\n                <ErrorMessage name={key} component=\"span\" />\n              </Label>\n              <Field type={key} name={key} />\n            </Fragment>\n          ))}\n\n          <SignBtn disabled={isDisabled({ values, errors })}>Sign up</SignBtn>\n\n          <GoogleBtn />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n  setIsVerify: PropTypes.func,\n};\n","import { useState } from 'react';\n\nimport Container from 'components/common/Container/Container';\nimport SignupForm from 'components/AuthForms/SignupForm';\nimport Modal from 'layouts/Modal/Modal';\nimport VerifyForm from 'components/AuthForms/VerifyForm';\n\nconst SignupPage = () => {\n  const [isVerify, setIsVerify] = useState(false);\n\n  return (\n    <Container w=\"400px\" h=\"100vh\" p=\"0\" d=\"flex\" fd=\"column\" jc=\"center\">\n      <SignupForm setIsVerify={setIsVerify} />\n\n      {isVerify && (\n        <Modal onClick={() => setIsVerify(!isVerify)}>\n          <VerifyForm />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default SignupPage;\n","export const RENDER_FIELDS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const FORM_FIELDS = ['firstName', 'lastName', ...RENDER_FIELDS];\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'only letters and numbers,  more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'https://linkedin.com',\n  regExp:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const GITHUB = {\n  msg: 'https://...github',\n  regExp:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const DATE = {\n  msg: 'dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const ADDRESS = {\n  msg: 'only letters, numbers, commas, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","import { object, string, number, ref } from 'yup';\n\nimport { NAME, EMAIL } from 'utils/constants';\n\nconst name = string()\n  .min(4, 'is too short')\n  .matches(NAME.regExp, NAME.msg)\n  .required('is required');\nconst email = string().matches(EMAIL.regExp, EMAIL.msg).required('is required');\nconst password = string().min(6, 'is too short').required('is required');\nconst code = number().required('is required').typeError('must be a number');\n\nexport const signupSchema = object().shape({ name, email, password });\nexport const signinSchema = object().shape({ email, password });\nexport const verifySchema = object().shape({ verificationCode: code });\nexport const forgotSchema = object().shape({ email });\nexport const resetSchema = object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([ref('newPass')], 'must match'),\n});\n","import { object, string } from 'yup';\n\nimport { NAME, PHONE, EMAIL, TELEGRAM } from 'utils/constants';\nimport { DATE, ADDRESS, LINKEDIN, GITHUB } from 'utils/constants';\n\nexport const contactSchema = object().shape({\n  firstName: string().matches(NAME.regExp, NAME.msg).required('Required'),\n  lastName: string().matches(NAME.regExp, NAME.msg),\n  phone: string().matches(PHONE.regExp, PHONE.msg).required('Required'),\n  email: string().matches(EMAIL.regExp, EMAIL.msg),\n  whatsapp: string().matches(PHONE.regExp, PHONE.msg),\n  viber: string().matches(PHONE.regExp, PHONE.msg),\n  telegram: string().matches(TELEGRAM.regExp, TELEGRAM.msg),\n  linkedin: string().matches(LINKEDIN.regExp, LINKEDIN.msg),\n  github: string().matches(GITHUB.regExp, GITHUB.msg),\n  address: string().matches(ADDRESS.regExp, ADDRESS.msg),\n  birthday: string().matches(DATE.regExp, DATE.msg),\n  notes: string(),\n});\n"],"names":["CommonStyles","css","themes","SignButton","styled","IconLink","href","baseURL","p","d","ai","jc","size","onClick","disabled","children","type","PropTypes","Form","FormikForm","Field","FormikField","Label","ErrorMessage","FormikError","Div","fs","Link","RouteLink","Btn","to","dispatch","useDispatch","userEmail","useAuth","isDisabled","errors","Object","keys","length","initialValues","verificationCode","validationSchema","verifySchema","onSubmit","values","actions","verifyThunk","unwrap","catch","err","console","log","then","refreshThunk","resetForm","Fragment","name","component","Backdrop","modalRoot","document","querySelector","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","createPortal","target","currentTarget","email","password","setIsVerify","isError","noValue","some","signupSchema","registerThunk","pld","result","user","verifiedEmail","LinkRoute","map","at","toUpperCase","substring","SignBtn","GoogleBtn","useState","isVerify","Container","w","h","fd","Modal","VerifyForm","RENDER_FIELDS","FORM_FIELDS","NAME","msg","regExp","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading","string","min","matches","required","code","number","typeError","object","shape","signinSchema","forgotSchema","resetSchema","newPass","confirmPass","oneOf","ref","contactSchema","firstName","lastName","phone","whatsapp","viber","telegram","linkedin","github","address","birthday","notes"],"sourceRoot":""}