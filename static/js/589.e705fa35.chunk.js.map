{"version":3,"file":"static/js/589.e705fa35.chunk.js","mappings":"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","sources":["components/common/Button/Button.styled.jsx","components/common/Button/Button.jsx","utils/hooks/useContacts.js","components/common/GrigWrap/GrigWrap.styled.jsx","components/common/GrigWrap/GrigWrap.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactCard/ContactCard.styled.jsx","utils/constants/contactFields.js","utils/constants/regExp.js","components/ContactCard/ContactCard.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx","styles/themes.jsx","utils/constants/constants.js"],"sourcesContent":["import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const MainButton = styled.button`\n  padding: 2px 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    padding: 4px 10px;\n    font-size: 14px;\n  }\n\n  color: ${themes.colors.black};\n  border: 1px solid ${themes.colors.border};\n  border-radius: ${themes.borderRadius.s};\n  background-color: ${themes.colors.white};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.ligthBlue};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.border};\n    background-color: ${themes.colors.white};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { MainButton } from './Button.styled';\n\nconst Button = ({ onClick, type, disabled, children }) => {\n  return (\n    <MainButton onClick={onClick} type={type} disabled={disabled}>\n      {children}\n    </MainButton>\n  );\n};\n\nexport default Button;\n\nButton.propTepes = {\n  onClick: PropTypes.func,\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  margin: ${({ m }) => m};\n  padding: ${({ p }) => p};\n  /* max-width: 1280px; */\n  display: grid;\n  justify-content: center;\n\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(${({ mm = '300px' }) => mm}, 1fr)\n  );\n\n  grid-row-gap: ${({ rg = '10px' }) => rg};\n  grid-column-gap: ${({ cg = '40px' }) => cg};\n\n  @media screen and (width >= 768px) {\n    height: ${({ h }) => h};\n    grid-template-columns: ${({ gtc }) => gtc};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Div } from './GrigWrap.styled';\n\nconst GrigWrap = ({ h, m, p, rg, cg, mm, gtc, children }) => {\n  return (\n    <Div id=\"grid\" h={h} m={m} p={p} rg={rg} cg={cg} mm={mm} gtc={gtc}>\n      {children}\n    </Div>\n  );\n};\n\nexport default GrigWrap;\n\nGrigWrap.propTypes = {\n  h: PropTypes.string,\n  m: PropTypes.string,\n  p: PropTypes.string,\n  rg: PropTypes.string,\n  cg: PropTypes.string,\n  mm: PropTypes.string,\n  gtc: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst heightSize = '30px';\nconst fontSize = '14px';\n\nexport const Div = styled.div`\n  width: 100%;\n  position: relative;\n  display: inline-block;\n\n  input {\n    width: 100%;\n    height: ${heightSize};\n    padding-inline: ${heightSize};\n\n    border: 1px solid ${themes.colors.border};\n    border-radius: ${themes.borderRadius.s};\n    outline: transparent;\n    transition: border-color 250ms;\n\n    &:hover,\n    &:focus {\n      border-color: ${themes.colors.hovered};\n    }\n\n    &::placeholder {\n      width: fit-content;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n      transition: left 300ms, transform 300ms;\n      font-size: ${fontSize};\n    }\n\n    &:focus::placeholder {\n      left: 0;\n      transform: translateX(${heightSize});\n    }\n\n    & + svg {\n      position: absolute;\n      top: 50%;\n      left: calc(50% - 2.5 * ${fontSize});\n      transform: translate(-50%, -50%);\n      transition: left 300ms, transform 300ms, fill 300ms;\n      cursor: text;\n    }\n\n    &:focus + svg,\n    &:not(:placeholder-shown) + svg {\n      left: calc(${heightSize} * 0.55);\n      fill: ${themes.colors.accent};\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 18px;\n  height: 18px;\n\n  position: absolute;\n  top: 50%;\n  right: calc(${heightSize} * 0.55);\n\n  transform: translate(50%, -50%);\n  border: 1px solid transparent;\n  border-radius: 50%;\n  background-color: ${themes.colors.border};\n  color: ${themes.colors.white};\n  font-weight: 700;\n  font-size: 12px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { Div, Button } from './Filter.styled';\nimport { selectFilterValue } from 'store/seletors';\nimport { setFilterValue } from 'store/contacts/contactsSlice';\n\nconst Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleClick = e => e.target.previousElementSibling.focus();\n  const handleSearch = e => dispatch(setFilterValue(e.target.value));\n\n  return (\n    <Div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        value={filterValue}\n        onChange={handleSearch}\n      />\n      <BsSearch size=\"16\" onClick={handleClick} />\n      {filterValue && <Button onClick={handleSearch}>✕</Button>}\n    </Div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nimport { themes } from 'styles/themes';\n\nexport const List = styled.ul`\n  width: 100%;\n  margin-top: 10px;\n  padding: 0;\n  display: inline-flex;\n  flex-direction: column;\n\n  font-weight: 500;\n  counter-reset: section;\n  list-style-type: none;\n\n  li {\n    display: inline-flex;\n    padding: 3px 6px 1px;\n\n    gap: 5px;\n    cursor: pointer;\n    transition: color 250ms;\n\n    &:hover,\n    &:focus {\n      color: ${themes.colors.hovered};\n    }\n\n    &::before {\n      counter-increment: section;\n      content: counters(section, '.') '.';\n    }\n  }\n\n  & .active {\n    background-color: ${themes.colors.accent};\n    color: ${themes.colors.white};\n\n    &:hover,\n    &:focus {\n      color: ${themes.colors.white};\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { List } from './ContactList.styled';\nimport { fetchContactsThunk } from 'store/contacts/contactsOperations';\nimport { setActiveContact } from 'store/contacts/contactsSlice';\nimport { useContacts } from 'utils/hooks';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { contacts, activeContact, filterValue } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // remove previous '.active' class\n    let activeEl = document.querySelector('li[data-id].active');\n    activeEl?.classList.remove('active');\n    // set '.active' class\n    activeEl = activeContact\n      ? document.querySelector(`li[data-id=\"${activeContact._id}\"]`)\n      : document.querySelector('li[data-id]');\n    activeEl?.classList.add('active');\n    // setActiveContact\n    const contact = activeEl\n      ? contacts.find(el => el._id === activeEl.dataset.id)\n      : null;\n\n    dispatch(setActiveContact(contact));\n  }, [activeContact, contacts, dispatch]);\n\n  const filtredContacts = contacts.filter(el => {\n    const value = filterValue.toLowerCase();\n    return (\n      el.firstName.toLowerCase().includes(value) ||\n      el.lastName.toLowerCase().includes(value)\n    );\n  });\n\n  const handleClick = e => {\n    const { id } = e.target.dataset;\n    const activeContact = contacts.find(el => el._id === id);\n    dispatch(setActiveContact(activeContact));\n  };\n\n  return (\n    <List>\n      {filtredContacts.map(el => (\n        <li key={el._id} data-id={el._id} onClick={handleClick}>\n          {el.firstName} {el.lastName}\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Div = styled.div`\n  margin-bottom: 15px;\n  margin-left: 21%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 10px;\n\n  & a {\n    padding: 3px;\n    width: 26px;\n    height: 26px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    border-radius: 50%;\n    border: 1px solid ${themes.colors.border};\n    background-color: ${themes.colors.white};\n    transition: border-color 250ms, background-color 250ms;\n\n    &:hover,\n    &:focus {\n      cursor: pointer;\n      border-color: ${themes.colors.hovered};\n      background-color: ${themes.colors.ligthBlue};\n    }\n\n    & svg {\n      fill: ${themes.colors.hovered};\n    }\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 10px;\n\n  list-style: none;\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  & li {\n    padding-block: 5px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n    grid-column-gap: 20px;\n    grid-template-areas: 'key value value value value';\n\n    & span {\n      &:nth-of-type(1) {\n        grid-area: key;\n        text-align: right;\n\n        color: ${themes.colors.placeholder};\n\n        @media screen and (width < 768px) {\n          letter-spacing: -1px;\n        }\n      }\n      &:nth-of-type(2) {\n        grid-area: value;\n        text-align: left;\n      }\n    }\n\n    &:not(:last-of-type) {\n      border-bottom: 1px solid ${themes.colors.border};\n    }\n  }\n\n  & + div {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n","export const RENDER_FIELDS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const FORM_FIELDS = ['firstName', 'lastName', ...RENDER_FIELDS];\n","export const NAME = {\n  msg: 'Only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'Pattern: test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'Only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'Only letters, more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'Only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'Starts with https://linkedin.com',\n  regExp: /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)/,\n};\n\nexport const GITHUB = {\n  msg: 'Starts with https://...github',\n  regExp: /^(http(s?):\\/\\/)?(www\\.)?github\\.([a-z])+\\/([A-Za-z0-9]{1,})+\\/?$/,\n};\n\nexport const DATE = {\n  msg: 'Pattern: dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const COUNTRY = {\n  msg: 'Only letters, more than two',\n  regExp: /[a-zA-Z]\\w{1}/,\n};\n\nexport const RANDOM_UUID = {\n  msg: 'Only letters, numbers, dashes',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { BsTelephone, BsEnvelope, BsWhatsapp, BsGithub } from 'react-icons/bs';\nimport { LiaTelegram, LiaViber, LiaLinkedinIn } from 'react-icons/lia';\nimport { PiMapPinFill } from 'react-icons/pi';\n\nimport { Div, List } from './ContactCard.styled';\nimport { useContacts } from 'utils/hooks';\nimport { RENDER_FIELDS } from 'utils/constants';\nimport { deleteContactThunk } from 'store/contacts/contactsOperations';\nimport GrigWrap from 'components/common/GrigWrap/GrigWrap';\nimport Button from 'components/common/Button/Button';\n\nconst ContactCard = ({ triggerForm }) => {\n  const dispatch = useDispatch();\n  const { activeContact } = useContacts();\n\n  const link = {\n    phone: {\n      href: `tel:${activeContact?.phone}`,\n      icon: <BsTelephone size=\"14\" />,\n    },\n    email: {\n      href: `mailto:${activeContact?.email}`,\n      icon: <BsEnvelope size=\"14\" />,\n    },\n    whatsapp: {\n      href: `https://wa.me/${activeContact?.whatsapp}`,\n      icon: <BsWhatsapp size=\"14\" />,\n    },\n    viber: {\n      href: `viber://chat?number:+${activeContact?.viber}`,\n      icon: <LiaViber size=\"20\" />,\n    },\n    telegram: {\n      href: `https://t.me/${activeContact?.telegram.replace('@', '')}`,\n      icon: <LiaTelegram size=\"16\" />,\n    },\n    linkedin: {\n      href: activeContact?.linkedin,\n      icon: <LiaLinkedinIn size=\"20\" />,\n    },\n    github: { href: activeContact?.github, icon: <BsGithub size=\"16\" /> },\n    address: {\n      href:\n        activeContact?.address &&\n        'https://www.google.com/maps/search/' +\n          `${activeContact?.address.split(/\\s+/).join('+')}`,\n      icon: <PiMapPinFill size=\"16\" />,\n    },\n  };\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContactThunk(activeContact._id));\n  };\n\n  return (\n    <>\n      <Div>\n        {activeContact &&\n          Object.keys(link).map(\n            key =>\n              activeContact[key] && (\n                <a\n                  href={link[key].href}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  key={link[key].href}\n                >\n                  {link[key].icon}\n                </a>\n              )\n          )}\n      </Div>\n\n      <List>\n        {activeContact &&\n          Object.keys(activeContact).map(\n            key =>\n              RENDER_FIELDS.includes(key) &&\n              activeContact[key] && (\n                <li key={key}>\n                  <span>{`${key}`}</span>\n                  <span>{`${activeContact[key]}`}</span>\n                </li>\n              )\n          )}\n      </List>\n\n      <GrigWrap mm=\"40px\" cg=\"3vw\">\n        <Button onClick={() => triggerForm('add')}>Add</Button>\n        <Button disabled={!activeContact} onClick={() => triggerForm('edit')}>\n          Edit\n        </Button>\n        <Button disabled={!activeContact} onClick={handleDeleteContact}>\n          Delete\n        </Button>\n      </GrigWrap>\n    </>\n  );\n};\n\nexport default ContactCard;\n\nContactCard.propTypes = { triggerForm: PropTypes.func };\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-left: 21%;\n  padding-bottom: 5px;\n  font-size: 12px;\n  font-family: 'Roboto', sans-serif;\n  color: ${themes.colors.failed};\n`;\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  & #grid {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n  /* dynamic input width */\n  & #firstN,\n  & #lastN,\n  span {\n    font-size: 16px;\n    font-weight: 700;\n\n    @media screen and (width >= 768px) {\n      font-size: 18px;\n    }\n\n    @media screen and (width >= 1280px) {\n      font-size: 20px;\n    }\n\n    &::placeholder {\n      color: ${themes.colors.placeholder};\n    }\n\n    &:first-of-type {\n      margin: 0 0 10px 21%;\n    }\n  }\n\n  & #firstN {\n    width: ${({ fnw }) => `${fnw}px`};\n  }\n\n  & #lastN {\n    width: ${({ lnw }) => `${lnw}px`};\n  }\n\n  & .wrapper:not(:last-of-type) {\n    border-bottom: 1px solid ${themes.colors.border};\n  }\n\n  & span {\n    position: absolute;\n    left: -100%;\n    bottom: -100%;\n    color: transparent;\n  }\n`;\n\nexport const Label = styled.label`\n  padding-block: 2px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-column-gap: 20px;\n  grid-template-areas: 'key value value value value';\n  grid-area: key;\n  text-align: right;\n  align-items: center;\n\n  color: ${themes.colors.placeholder};\n  font-size: 12px;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  @media screen and (width < 768px) {\n    letter-spacing: -1px;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  padding-block: 3px;\n  grid-area: value;\n  text-align: left;\n  background-color: transparent;\n\n  border: 1px solid transparent;\n  outline: transparent;\n  font-size: 12px;\n  transition: border-color 250ms;\n\n  @media screen and (width >= 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (width >= 1280px) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { object, string } from 'yup';\n\nimport { Form, Field, Label } from 'components/ContactForm/ContactForm.styled';\nimport { ErrorMessage } from 'components/ContactForm/ContactForm.styled';\nimport { NAME, PHONE, EMAIL, TELEGRAM, DATE, COUNTRY } from 'utils/constants';\nimport { RENDER_FIELDS, FORM_FIELDS, LINKEDIN, GITHUB } from 'utils/constants';\nimport { useContacts } from 'utils/hooks';\nimport { addContactThunk } from 'store/contacts/contactsOperations';\nimport { updateContactThunk } from 'store/contacts/contactsOperations';\nimport GrigWrap from 'components/common/GrigWrap/GrigWrap';\nimport Button from 'components/common/Button/Button';\n\nconst ContactSchema = object().shape({\n  firstName: string().matches(NAME.regExp, NAME.msg).required('Required'),\n  lastName: string().matches(NAME.regExp, NAME.msg),\n  phone: string().matches(PHONE.regExp, PHONE.msg).required('Required'),\n  email: string().matches(EMAIL.regExp, EMAIL.msg),\n  whatsapp: string().matches(PHONE.regExp, PHONE.msg),\n  viber: string().matches(PHONE.regExp, PHONE.msg),\n  telegram: string().matches(TELEGRAM.regExp, TELEGRAM.msg),\n  linkedin: string().matches(LINKEDIN.regExp, LINKEDIN.msg),\n  github: string().matches(GITHUB.regExp, GITHUB.msg),\n  address: string().matches(COUNTRY.regExp, COUNTRY.msg),\n  birthday: string().matches(DATE.regExp, DATE.msg),\n  notes: string(),\n});\n\nconst ContactForm = ({ triggerForm, isContactForm }) => {\n  const dispatch = useDispatch();\n  const { contacts, activeContact } = useContacts();\n  const [name, setName] = useState({ firstWidth: 75, lastWidth: 100 });\n\n  const getInitialValues = bool => {\n    const initialValues = {};\n    FORM_FIELDS.forEach(\n      key => (initialValues[key] = bool === 'edit' ? activeContact[key] : '')\n    );\n    return initialValues;\n  };\n\n  const onChange = e => {\n    const { name, value, placeholder } = e.target;\n    const spanEl = document.querySelector('span');\n    spanEl.innerHTML = value ? value : placeholder;\n    const getWidth = el => el.getBoundingClientRect().width + 15;\n\n    if (name === 'firstName') {\n      setName(prevState => ({ ...prevState, firstWidth: getWidth(spanEl) }));\n    }\n    if (name === 'lastName') {\n      setName(prevState => ({ ...prevState, lastWidth: getWidth(spanEl) }));\n    }\n  };\n\n  const onSubmit = (values, actions) => {\n    const { firstName } = values;\n    const isInContacts = contacts.some(\n      el => el.firstName.toLowerCase() === firstName.toLowerCase()\n    );\n    if (isInContacts && isContactForm === 'add') {\n      return alert(`${firstName} is already in contacts!`);\n    }\n\n    dispatch(\n      isContactForm === 'add'\n        ? addContactThunk(values)\n        : updateContactThunk({ id: activeContact._id, contact: values })\n    );\n\n    triggerForm(false);\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={getInitialValues(isContactForm)}\n      validationSchema={ContactSchema}\n      onSubmit={onSubmit}\n    >\n      <Form onChange={onChange} fnw={name.firstWidth} lnw={name.lastWidth}>\n        <ErrorMessage name=\"firstName\" component=\"div\" />\n        <ErrorMessage name=\"lastName\" component=\"div\" />\n        <Field id=\"firstN\" type=\"text\" name=\"firstName\" placeholder=\"Name\" />\n        <Field id=\"lastN\" type=\"text\" name=\"lastName\" placeholder=\"Surname\" />\n\n        {RENDER_FIELDS.map(key => (\n          <div className=\"wrapper\" key={key}>\n            <Label>\n              {key}\n              <Field type=\"text\" name={key} />\n            </Label>\n            <ErrorMessage name={key} component=\"div\" />\n          </div>\n        ))}\n        <span></span>\n        <GrigWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n          <Button type=\"submit\">Submit</Button>\n          <Button type=\"button\" onClick={() => triggerForm(false)}>\n            Cancel\n          </Button>\n        </GrigWrap>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = { triggerForm: PropTypes.func };\n","import { useState, useEffect } from 'react';\n\nimport { useAuth, useContacts } from 'utils/hooks';\nimport OvalLoader from 'components/common/Loader/OvalLoader';\nimport GrigWrap from 'components/common/GrigWrap/GrigWrap';\nimport Container from 'components/common/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactCard from 'components/ContactCard/ContactCard';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isContactForm, setIsContactForm] = useState(false);\n  const { userId } = useAuth();\n  const { activeContact, isLoading } = useContacts();\n\n  const title =\n    !isLoading && userId === activeContact?.owner\n      ? `${activeContact?.firstName} ${activeContact?.lastName}`\n      : '';\n  const gridHeight = window.innerHeight > 500 ? 'calc(100vh - 90px)' : '410px';\n  const headerEl = document.querySelector('header');\n\n  useEffect(() => {\n    window.addEventListener('resize', e => {\n      setIsMobile(headerEl?.clientWidth <= 300);\n    });\n    return () => {\n      window.removeEventListener('resize', e => {\n        setIsMobile(headerEl?.clientWidth <= 300);\n      });\n    };\n  }, [headerEl]);\n\n  const triggerForm = bool => {\n    setIsContactForm(bool);\n  };\n\n  return (\n    <GrigWrap h={gridHeight} gtc=\"4fr 6fr\">\n      <Container pi=\"0\">\n        <Filter /> <br />\n        <ContactList />\n      </Container>\n\n      {isContactForm && (\n        <ContactForm triggerForm={triggerForm} isContactForm={isContactForm} />\n      )}\n\n      {!isContactForm && !isMobile && (\n        <Container pi=\"0\" mt=\"0 0 10px 21%\" t2={title}>\n          {!isLoading && <ContactCard triggerForm={triggerForm} />}\n        </Container>\n      )}\n\n      {isLoading && <OvalLoader />}\n    </GrigWrap>\n  );\n};\n\nexport default Contacts;\n","export const themes = Object.freeze({\n  colors: {\n    background: '#F7F6F9',\n    accent: '#206bdd',\n    hovered: '#2374ef',\n\n    black: '#343434',\n    white: '#FFFFFF',\n    ligthBlue: '#E3F3FF',\n\n    failed: '#E74A3B',\n    saccess: '#019595',\n    canceled: '#E5EDFA',\n\n    border: '#b1b1b1',\n    placeholder: '#5c5858',\n  },\n  fontSizes: {\n    micro: '10px',\n    xs: '12px',\n    s: '14px',\n    m: '16px',\n    l: '18px',\n    xl: '20px',\n    xxl: '24px',\n    xxxl: '32px',\n  },\n  fontWeight: {\n    r: 400,\n    m: 500,\n    sb: 600,\n    b: 700,\n  },\n  breakpoints: {\n    xs: '320px',\n    s: '375px',\n    m: '768px',\n    l: '1280px',\n  },\n  animations: {\n    cubicBezier: 'cubic-bezier(0, 0.5, 1.3, 2)',\n    duration: '250ms',\n  },\n  shadows: {\n    authHeading:\n      '0px 47px 355px rgba(0, 0, 0, 0.07), 0px 9.4px 57.6875px rgba(0, 0, 0, 0.035)',\n    authButton: '4px 2px 16px rgba(136, 165, 191, 0.48)',\n  },\n  toastify: {\n    theme: 'light',\n  },\n  borderRadius: {\n    s: '5px',\n    m: '10px',\n    l: '15px',\n  },\n  modalBackdropcolors: {\n    black: 'rgba(23, 24, 32, 0.5)',\n    grey: 'rgba(103, 103, 103, 0.5)',\n  },\n  backgroundImages: {},\n});\n","export const INPUT_NAME = Object.freeze({\n  EMAIL: 'email',\n  PASSWORD: 'password',\n  USERNAME: 'username',\n});\n"],"names":["MainButton","styled","themes","Button","onClick","type","disabled","children","propTepes","PropTypes","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading","Div","m","p","mm","rg","cg","h","gtc","id","heightSize","fontSize","selectFilterValue","dispatch","useDispatch","handleSearch","e","setFilterValue","target","value","name","placeholder","onChange","size","previousElementSibling","focus","List","useEffect","fetchContactsThunk","activeEl","document","querySelector","classList","remove","_id","add","contact","find","el","dataset","setActiveContact","filtredContacts","filter","toLowerCase","firstName","includes","lastName","handleClick","map","RENDER_FIELDS","FORM_FIELDS","NAME","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","COUNTRY","triggerForm","link","phone","href","icon","email","whatsapp","viber","telegram","replace","linkedin","github","address","split","join","Object","keys","key","rel","deleteContactThunk","ErrorMessage","FormikError","Form","FormikForm","fnw","lnw","Label","Field","FormikField","ContactSchema","object","shape","string","matches","required","birthday","notes","isContactForm","useState","firstWidth","lastWidth","setName","initialValues","bool","forEach","getInitialValues","validationSchema","onSubmit","values","actions","some","alert","addContactThunk","updateContactThunk","resetForm","spanEl","innerHTML","getWidth","getBoundingClientRect","width","prevState","component","className","isMobile","setIsMobile","setIsContactForm","userId","useAuth","title","owner","gridHeight","window","innerHeight","headerEl","addEventListener","clientWidth","removeEventListener","Container","pi","mt","t2","OvalLoader","freeze","colors","background","accent","hovered","black","white","ligthBlue","failed","saccess","canceled","border","fontSizes","micro","xs","s","l","xl","xxl","xxxl","fontWeight","r","sb","b","breakpoints","animations","cubicBezier","duration","shadows","authHeading","authButton","toastify","theme","borderRadius","modalBackdropcolors","grey","backgroundImages","INPUT_NAME","PASSWORD","USERNAME"],"sourceRoot":""}