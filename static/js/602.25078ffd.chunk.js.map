{"version":3,"file":"static/js/602.25078ffd.chunk.js","mappings":"oSAIaA,EAAMC,EAAAA,GAAAA,IAAH,4OAeHC,EAAUD,EAAAA,GAAAA,IAAH,8fAYWE,EAAAA,EAAAA,OAAAA,OAShBA,EAAAA,EAAAA,OAAAA,aASFC,EAASH,EAAAA,GAAAA,IAAH,wmBAYGE,EAAAA,EAAAA,OAAAA,OAEAA,EAAAA,EAAAA,OAAAA,OACA,gBAAGE,EAAH,EAAGA,IAAH,oBAAoBA,EAApB,QAWhB,gBAAGC,EAAH,EAAGA,KAAH,yBAA0BA,EAA1B,OAGOH,EAAAA,EAAAA,OAAAA,a,UCnCb,EAjCoB,SAAC,GAA0B,IAAxBI,EAAuB,EAAvBA,iBACfC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,MAATD,KACFE,GAAeC,EAAAA,EAAAA,IAAgBH,EAAKI,MAO1C,OACE,UAACd,EAAD,YACE,SAACI,EAAD,CAAQC,IAAKK,EAAKK,UAAWT,KAAMI,EAAKK,UAAY,GAAKH,IAExDI,EAAAA,GAAAA,KACC,SAAAC,GAAE,OACAP,EAAKO,KACH,UAACf,EAAD,YACE,4BAAOe,EAAP,QACA,0BAAOP,EAAKO,OAFAA,EAFhB,KASJ,UAACC,EAAA,EAAD,CAAUC,GAAG,OAAOC,GAAG,MAAMC,IAAI,cAAjC,WACE,SAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,GAAiB,EAAvB,EAAjB,mBACA,oBACA,SAACe,EAAA,EAAD,CAAQC,QAtBc,WACdC,OAAOC,QAAQ,iDACpBjB,GAASkB,EAAAA,EAAAA,MACjB,EAmBK,yBAIP,E,iDClCKC,GAAmBC,EAAAA,EAAAA,IAAH,6EAGFzB,EAAAA,EAAAA,OAAAA,SAIP0B,GAAO5B,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,+TAIcE,EAAAA,EAAAA,OAAAA,QAelB4B,EAAQ9B,EAAAA,GAAAA,MAAH,qOAQPE,EAAAA,EAAAA,OAAAA,aAKE6B,GAAQ/B,EAAAA,EAAAA,IAAOgC,EAAAA,GAAPhC,CAAH,8bACd0B,EAaOxB,EAAAA,EAAAA,OAAAA,OASE+B,GAAWjC,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,6IAKVE,EAAAA,EAAAA,OAAAA,OAGEC,EAASH,EAAAA,GAAAA,MAAH,4vBACf0B,EAYkBxB,EAAAA,EAAAA,OAAAA,OAEAA,EAAAA,EAAAA,OAAAA,OACA,gBAAGE,EAAH,EAAGA,IAAH,oBAAoBA,EAApB,QAchB,gBAAGC,EAAH,EAAGA,KAAH,yBAA0BA,EAA1B,OAGOH,EAAAA,EAAAA,OAAAA,aASAiC,EAAYnC,EAAAA,GAAAA,KAAH,gGAGXE,EAAAA,EAAAA,OAAAA,O,UCxBX,EAnFoB,SAAC,GAA0B,IAAxBI,EAAuB,EAAvBA,iBACfC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAkC2B,EAAAA,EAAAA,UAAS3B,EAAKK,WAAhD,eAAOA,EAAP,KAAkBuB,EAAlB,KACA,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACM5B,GAAeC,EAAAA,EAAAA,IAAgBH,EAAKI,MAQpC2B,EAAS,mCAAG,WAAOC,EAAGC,GAAV,gFACVC,EAASF,EAAEG,OAAOC,MAAM,GADd,kBAGRC,EAAAA,GAAAA,SAAsB,CAAEH,OAAAA,IAHhB,OAIRI,EAAWC,IAAIC,gBAAgBN,GACrCN,EAAaU,GACbL,EAAc,SAAUC,GANV,gDAQdJ,EAAe,KAAMW,SARP,yDAAH,wDA6Bf,OACE,SAAC,KAAD,CACEC,cArCqB,WACvB,IAAMA,EAAgB,CAAER,OAAQ,IAEhC,OADA5B,EAAAA,GAAAA,SAAyB,SAAAqC,GAAG,OAAKD,EAAcC,GAAO3C,EAAK2C,EAA/B,IACrBD,CACR,CAiCkBE,GACfC,iBAAkBC,EAAAA,GAClBC,SArBa,SAACC,EAAQC,GACxB,IAAMC,EAAW,IAAIC,SAErBC,OAAOC,KAAKL,GAAQM,SAAQ,SAAAX,IACd,WAARA,GAAqBK,EAAOL,MACL,kBAAhBK,EAAOL,GAChBO,EAASK,OAAOZ,EAAKK,EAAOL,GAAKa,QAEjCN,EAASK,OAAOZ,EAAKK,EAAOL,IAE/B,IAED7C,GAAS2D,EAAAA,EAAAA,IAAgBP,IACzBrD,GAAiB,GACjBoD,EAAQS,WACT,EAGC,SAKG,YAAwB,IAArBzB,EAAoB,EAApBA,cACF,OACE,UAACd,EAAD,YACE,UAACwC,EAAA,EAAD,CAAWC,EAAE,IAAIC,EAAE,kBAAkBC,EAAE,OAAOC,GAAG,MAAjD,WACE,SAAC,EAAD,CACEC,KAAK,OACL5D,KAAK,SAELT,IAAKU,EACLT,KAAMS,EAAY,GAAKH,EACvB+D,SAAU,SAAAjC,GAAC,OAAID,EAAUC,EAAGC,EAAjB,IAEZJ,IAAe,SAACH,EAAD,UAAYG,OAG7BvB,EAAAA,GAAAA,KAAqB,SAAAqC,GAAG,OACvB,iBAAKuB,UAAU,UAAf,WACE,UAAC7C,EAAD,WACGsB,EADH,KAEE,SAACrB,EAAD,CAAO0C,KAAK,OAAO5D,KAAMuC,QAE3B,SAACnB,EAAD,CAAUpB,KAAMuC,EAAKwB,UAAU,UALHxB,EADP,KASzB,UAACnC,EAAA,EAAD,CAAUC,GAAG,OAAOC,GAAG,MAAMC,IAAI,cAAjC,WACE,SAACC,EAAA,EAAD,CAAQoD,KAAK,SAAb,qBACA,SAACpD,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,GAAiB,EAAvB,EAAjB,yBAIP,GAGN,ECrED,EApBoB,WAClB,IAAQuE,GAAcnE,EAAAA,EAAAA,MAAdmE,UACR,GAA0CzC,EAAAA,EAAAA,WAAS,GAAnD,eAAO0C,EAAP,KAAsBxE,EAAtB,KAEMyE,EAAaxD,OAAOyD,YAAc,IAAM,qBAAuB,QAErE,OACE,UAAC/D,EAAA,EAAD,CAAUgE,EAAGF,EAAY3D,IAAI,UAA7B,WACE,oCAEC0D,IAAkBD,IACjB,SAAC,EAAD,CAAavE,iBAAkBA,KAE/BwE,IAAkBD,IAClB,SAAC,EAAD,CAAavE,iBAAkBA,MAItC,C,iXCzBD,IAAM4E,EAAO,CACXrE,KAAM,OACNsE,IAAK,qDACLC,QAAS,+HAGLC,EAAQ,CACZxE,KAAM,QACNsE,IAAK,8BACLC,QAAS,mDAGLE,EAAQ,CACZzE,KAAM,QACNsE,IAAK,6DACLC,QAAS,4DAGLG,EAAW,CACf1E,KAAM,WACNsE,IAAK,0DACLC,QAAS,sDAULI,EAAY,CAChB3E,KAAM,YACNsE,IAAK,oBACLC,QACE,6LAGEK,EAAW,CACf5E,KAAM,WACNsE,IAAK,6BACLC,QACE,oJAGEM,EAAS,CACb7E,KAAM,SACNsE,IAAK,+BACLC,QACE,8HAGEO,EAAO,CACX9E,KAAM,OACNsE,IAAK,aACLC,QACE,8EAGEQ,EAAU,CACd/E,KAAM,UACNsE,IAAK,gDACLC,QACE,sIC/DSS,EAAsB,CACjC,QACA,QACA,WACA,QACA,WACA,WACA,SACA,UACA,WACA,SAGWC,EAAc,CAAI,YAAa,YAAjB,OAAgCD,GAE9C9E,EAAmB,CAC9B,OACA,QACA,WACA,WACA,WACA,aACA,WACA,Q,4ICpBWgF,EAAc,WAQzB,MAAO,CAAEC,UAPQC,EAAAA,EAAAA,IAAYC,EAAAA,IAOVC,eANGF,EAAAA,EAAAA,IAAYC,EAAAA,IAMAE,aALdH,EAAAA,EAAAA,IAAYC,EAAAA,IAKeG,OAHjCJ,EAAAA,EAAAA,IAAYC,EAAAA,IAG4BrB,WAFpCoB,EAAAA,EAAAA,IAAYC,EAAAA,IAG/B,ECZYtF,EAAkB,SAAA0F,GAO7B,OANqBA,EAClBC,QAAQ,IAAK,KACbC,MAAM,OACNC,QAAO,SAACC,EAAK1F,GAAN,OAAa0F,EAAM1F,EAAG2F,GAAG,GAAGC,aAA5B,GAA2C,IAClDC,UAAU,EAAG,EAGjB,C,sSCJKzB,EAAU,SAAA0B,GAAM,MAAI,CAACA,EAAO1B,QAAS0B,EAAO3B,IAA5B,EAGhBtE,GAAO,EAAAkG,EAAAA,KACVC,IAAI,EAAG,gBACPC,SAAS,gBACTC,QAHU,gBAGC9B,EAAQ0B,EAAAA,GAAAA,MAChBK,GAAQ,EAAAJ,EAAAA,KACXE,SAAS,gBACTC,QAFW,gBAEA9B,EAAQ0B,EAAAA,GAAAA,MAChBM,EAAWL,EAAAA,KAAaC,IAAI,EAAG,gBAAgBC,SAAS,eACxDI,EAAON,EAAAA,KAAaE,SAAS,eAAeK,UAAU,oBAGtDC,EAAW,QAGX5E,EAASoE,EAAAA,KACZS,KAAK,OADO,0BACoBD,EADpB,OACuC,SAAAE,GAAI,OACrDA,GAAcA,EAAKC,MAAQH,CAD0B,IAGvDC,KAAK,OAAQ,qBAAqB,SAAAC,GAAI,OACpCA,GAAcA,EAAKhD,KAAKkD,SAAS,QADG,IAI5BC,EAAeb,EAAAA,KAAac,MAAM,CAAEhH,KAAAA,EAAMsG,MAAAA,EAAOC,SAAAA,IACjDU,EAAef,EAAAA,KAAac,MAAM,CAAEV,MAAAA,EAAOC,SAAAA,IAC3CW,EAAehB,EAAAA,KAAac,MAAM,CAAEG,iBAAkBX,IACtDY,EAAelB,EAAAA,KAAac,MAAM,CAAEV,MAAAA,IACpCe,EAAcnB,EAAAA,KAAac,MAAM,CAC5CM,QAASf,EACTgB,YAAahB,EAASiB,MAAM,CAACtB,EAAAA,GAAQ,YAAa,gBAGvCxD,EAAgBwD,EAAAA,KAAac,MAAM,CAC9ChH,KAAAA,EACAsG,MAAAA,EACAmB,UAAU,EAAAvB,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1CyB,UAAU,EAAAxB,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1C0B,UAAU,EAAAzB,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1C2B,YAAY,EAAA1B,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC5C4B,UAAU,EAAA3B,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1C6B,MAAO5B,EAAAA,OAGIjE,EAAeiE,EAAAA,KAAac,MAAM,CAAElF,OAAAA,IC7C3CyC,EAAU,SAAA0B,GAAM,MAAI,CAACA,EAAO1B,QAAS0B,EAAO3B,IAA5B,EAETyD,EAAgB7B,EAAAA,KAAac,MAAM,CAC9CgB,WAAW,EAAA9B,EAAAA,KACRE,SAAS,aACTC,QAFQ,gBAEG9B,EAAQ0B,EAAAA,GAAAA,MACtBgC,UAAU,EAAA/B,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1CiC,OAAO,EAAAhC,EAAAA,KACJE,SAAS,aACTC,QAFI,gBAEO9B,EAAQ0B,EAAAA,GAAAA,MACtBK,OAAO,EAAAJ,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MACvCkC,UAAU,EAAAjC,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1CmC,OAAO,EAAAlC,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MACvCyB,UAAU,EAAAxB,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1CoC,UAAU,EAAAnC,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1CqC,QAAQ,EAAApC,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MACxCsC,SAAS,EAAArC,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MACzC4B,UAAU,EAAA3B,EAAAA,MAAaG,QAAb,gBAAwB9B,EAAQ0B,EAAAA,GAAAA,MAC1CuC,MAAOtC,EAAAA,M","sources":["components/ProfileCard/ProfileCard.styled.jsx","components/ProfileCard/ProfileCard.jsx","components/ProfileForm/ProfileForm.styled.jsx","components/ProfileForm/ProfileForm.jsx","pages/ProfilePage.jsx","utils/constants/regExp.js","utils/constants/renderFields.js","utils/hooks/useContacts.js","utils/hooks/useAbbreviation.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { themes } from 'styles/themes';\n\nexport const Div = styled.div`\n  position: relative;\n\n  & #grid:last-of-type {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding-block: 2px;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-column-gap: 20px;\n  text-align: right;\n  align-items: center;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  &:not(:nth-last-of-type(2)) {\n    border-bottom: 1px solid ${themes.colors.border};\n  }\n\n  & span {\n    padding-block: 5px;\n    text-align: start;\n\n    &:nth-of-type(2n + 1) {\n      text-align: end;\n      color: ${themes.colors.placeholder};\n\n      &::first-letter {\n        text-transform: lowercase;\n      }\n    }\n  }\n`;\n\nexport const Avatar = styled.div`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  margin: 12px 0 20px 3vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Averia Sans Libre', sans-serif;\n  font-size: 72px;\n  font-weight: 700;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 50%;\n  background-color: ${themes.colors.white};\n  background-image: ${({ url }) => `url(${url})`};\n  background-size: cover;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ${({ abbr }) => `content:\"${abbr}\"`};\n    width: 198px;\n    height: 198px;\n    color: ${themes.colors.placeholder};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Button from 'components/shared/Button/Button';\nimport { useAuth, useAbbreviation } from 'utils/hooks';\nimport { deleteUserThunk } from 'store/auth/authOperations';\nimport { USER_CREDENTIALS } from 'utils/constants';\nimport { Div, Wrapper, Avatar } from './ProfileCard.styled';\n\nconst ProfileCard = ({ setIsProfileForm }) => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const abbreviation = useAbbreviation(user.name);\n\n  const handleDeleteProfile = () => {\n    const del = window.confirm('Do you want to delete your profile and data?');\n    del && dispatch(deleteUserThunk());\n  };\n\n  return (\n    <Div>\n      <Avatar url={user.avatarUrl} abbr={user.avatarUrl ? '' : abbreviation} />\n\n      {USER_CREDENTIALS.map(\n        el =>\n          user[el] && (\n            <Wrapper key={el}>\n              <span>{el}:</span>\n              <span>{user[el]}</span>\n            </Wrapper>\n          )\n      )}\n\n      <GridWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n        <Button onClick={() => setIsProfileForm(true)}>Edit</Button>\n        <div></div>\n        <Button onClick={handleDeleteProfile}>Delete</Button>\n      </GridWrap>\n    </Div>\n  );\n};\n\nexport default ProfileCard;\n\nProfileCard.propTypes = { setIsProfileForm: PropTypes.func };\n","import styled, { css } from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nconst HoverFocusStyles = css`\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n\n  & .wrapper:not(:nth-last-of-type(2)) {\n    border-bottom: 1px solid ${themes.colors.border};\n  }\n\n  & #grid:last-of-type {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  padding-block: 2px;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-column-gap: 20px;\n  text-align: right;\n  align-items: center;\n\n  color: ${themes.colors.placeholder};\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Field = styled(FormikField)`\n  ${HoverFocusStyles}\n\n  text-align: left;\n  background-color: transparent;\n  padding: 5px 0;\n\n  border: 1px solid transparent;\n  outline: transparent;\n  transition: border-color 250ms;\n\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  color: ${themes.colors.black};\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0px 1000px transparent inset;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-left: 22%;\n  padding-bottom: 5px;\n  font-size: 12px;\n  font-family: 'Roboto', sans-serif;\n  color: ${themes.colors.error};\n`;\n\nexport const Avatar = styled.input`\n  ${HoverFocusStyles}\n\n  position: relative;\n  width: 200px;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Averia Sans Libre', sans-serif;\n  font-size: 72px;\n  font-weight: 700;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 50%;\n  background-color: ${themes.colors.white};\n  background-image: ${({ url }) => `url(${url})`};\n  background-size: cover;\n  background-position: center;\n  cursor: pointer;\n  color: transparent;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ${({ abbr }) => `content:\"${abbr}\"`};\n    width: 198px;\n    height: 198px;\n    color: ${themes.colors.placeholder};\n  }\n\n  // &::-webkit-file-upload-button\n  &::file-selector-button {\n    display: none;\n  }\n`;\n\nexport const AvatarMsg = styled.span`\n  font-size: 18px;\n  font-family: 'Roboto', sans-serif;\n  color: ${themes.colors.error};\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Button from 'components/shared/Button/Button';\nimport { useAuth, useAbbreviation } from 'utils/hooks';\nimport { updateUserThunk } from 'store/auth/authOperations';\nimport { USER_CREDENTIALS } from 'utils/constants';\nimport { profileSchema, avatarSchema } from 'utils/validation';\nimport { Form, Field, Label, ErrorMsg } from './ProfileForm.styled';\nimport { Avatar, AvatarMsg } from './ProfileForm.styled';\nimport Container from 'components/shared/Container/Container';\n\nconst ProfileForm = ({ setIsProfileForm }) => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const [avatarUrl, setAvatarUrl] = useState(user.avatarUrl);\n  const [avatarError, setAvatarError] = useState('');\n  const abbreviation = useAbbreviation(user.name);\n\n  const getInitialValues = () => {\n    const initialValues = { avatar: '' };\n    USER_CREDENTIALS.forEach(key => (initialValues[key] = user[key]));\n    return initialValues;\n  };\n\n  const setAvatar = async (e, setFieldValue) => {\n    const avatar = e.target.files[0];\n    try {\n      await avatarSchema.validate({ avatar });\n      const imageUrl = URL.createObjectURL(avatar);\n      setAvatarUrl(imageUrl);\n      setFieldValue('avatar', avatar);\n    } catch (error) {\n      setAvatarError(error.message);\n    }\n  };\n\n  const onSubmit = (values, actions) => {\n    const formData = new FormData();\n\n    Object.keys(values).forEach(key => {\n      if (key === 'avatar' && !values[key]) return;\n      if (typeof values[key] === 'string') {\n        formData.append(key, values[key].trim());\n      } else {\n        formData.append(key, values[key]);\n      }\n    });\n\n    dispatch(updateUserThunk(formData));\n    setIsProfileForm(false);\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={getInitialValues()}\n      validationSchema={profileSchema}\n      onSubmit={onSubmit}\n    >\n      {({ setFieldValue }) => {\n        return (\n          <Form>\n            <Container m=\"0\" p=\"12px 0 20px 3vw\" d=\"flex\" ai=\"end\">\n              <Avatar\n                type=\"file\"\n                name=\"avatar\"\n                // accept=\"image/*\"\n                url={avatarUrl}\n                abbr={avatarUrl ? '' : abbreviation}\n                onChange={e => setAvatar(e, setFieldValue)}\n              />\n              {avatarError && <AvatarMsg>{avatarError}</AvatarMsg>}\n            </Container>\n\n            {USER_CREDENTIALS.map(key => (\n              <div className=\"wrapper\" key={key}>\n                <Label>\n                  {key}:\n                  <Field type=\"text\" name={key} />\n                </Label>\n                <ErrorMsg name={key} component=\"div\" />\n              </div>\n            ))}\n            <GridWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n              <Button type=\"submit\">Submit</Button>\n              <Button onClick={() => setIsProfileForm(false)}>Cancel</Button>\n            </GridWrap>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ProfileForm;\n\nProfileForm.propTypes = { setIsProfileForm: PropTypes.func };\n","import { useState } from 'react';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport ProfileCard from 'components/ProfileCard/ProfileCard';\nimport ProfileForm from 'components/ProfileForm/ProfileForm';\nimport { useAuth } from 'utils/hooks';\n\nconst ProfilePage = () => {\n  const { isLoading } = useAuth();\n  const [isProfileForm, setIsProfileForm] = useState(false);\n\n  const gridHeight = window.innerHeight > 600 ? 'calc(100vh - 90px)' : '510px';\n\n  return (\n    <GridWrap h={gridHeight} gtc=\"2fr 3fr\">\n      <h1>Profile</h1>\n\n      {isProfileForm && !isLoading && (\n        <ProfileForm setIsProfileForm={setIsProfileForm} />\n      )}\n      {!isProfileForm && !isLoading && (\n        <ProfileCard setIsProfileForm={setIsProfileForm} />\n      )}\n    </GridWrap>\n  );\n};\n\nexport default ProfilePage;\n","const NAME = {\n  name: 'NAME',\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  pattern: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst EMAIL = {\n  name: 'EMAIL',\n  msg: 'test@test.com, test@test.ua',\n  pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nconst PHONE = {\n  name: 'PHONE',\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  pattern: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nconst TELEGRAM = {\n  name: 'TELEGRAM',\n  msg: 'only letters and numbers,  more than five, start with @',\n  pattern: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nconst TELEGRAM_PHONE = {\n  name: 'TELEGRAM_PHONE',\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  pattern:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nconst HTTP_LINK = {\n  name: 'HTTP_LINK',\n  msg: 'http(s)://.../...',\n  pattern:\n    /^(http(s)?:\\/\\/)?(([_.-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst LINKEDIN = {\n  name: 'LINKEDIN',\n  msg: 'http(s)://linkedin.com/...',\n  pattern:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst GITHUB = {\n  name: 'GITHUB',\n  msg: 'http(s)://www.github.com/...',\n  pattern:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst DATE = {\n  name: 'DATE',\n  msg: 'dd.mm.yyyy',\n  pattern:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(\\.)(((0)[0-9])|((1)[0-2]))(\\.)((19|20)\\d{2}$)/,\n};\n\nconst ADDRESS = {\n  name: 'ADDRESS',\n  msg: 'only letters, numbers, commas, dashes, spases',\n  pattern:\n    /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я0-9])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport {\n  NAME,\n  EMAIL,\n  PHONE,\n  TELEGRAM,\n  TELEGRAM_PHONE,\n  HTTP_LINK,\n  LINKEDIN,\n  GITHUB,\n  DATE,\n  ADDRESS,\n};\n","export const CONTACT_CREDENTIALS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const CONTACT_FIELDS = ['firstName', 'lastName', ...CONTACT_CREDENTIALS];\n\nexport const USER_CREDENTIALS = [\n  'name',\n  'email',\n  'whatsApp',\n  'telegram',\n  'location',\n  'socialLink',\n  'birthday',\n  'about',\n];\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","export const useAbbreviation = text => {\n  const abbreviation = text\n    .replace('-', ' ')\n    .split(/\\s+/)\n    .reduce((acc, el) => acc + el.at(0).toUpperCase(), '')\n    .substring(0, 3);\n\n  return abbreviation;\n};\n","import * as Yup from 'yup';\n\nimport { regExp } from 'utils/constants';\n\nconst pattern = regExp => [regExp.pattern, regExp.msg];\n\n// Name, Email, Password\nconst name = Yup.string()\n  .min(4, 'is too short')\n  .required('is required')\n  .matches(...pattern(regExp.NAME));\nconst email = Yup.string()\n  .required('is required')\n  .matches(...pattern(regExp.EMAIL));\nconst password = Yup.string().min(6, 'is too short').required('is required');\nconst code = Yup.number().required('is required').typeError('must be a number');\n\n// Avatar\nconst MAX_SIZE = 1024 * 1024;\nconst MB = 1024 * 1024; // const kB = 1024;\n\nconst avatar = Yup.mixed()\n  .test('size', ` max file size: ${MAX_SIZE / MB}MB`, file =>\n    !file ? true : file.size <= MAX_SIZE\n  )\n  .test('type', 'invalid file type', file =>\n    !file ? true : file.type.includes('image')\n  );\n\nexport const signupSchema = Yup.object().shape({ name, email, password });\nexport const signinSchema = Yup.object().shape({ email, password });\nexport const verifySchema = Yup.object().shape({ verificationCode: code });\nexport const forgotSchema = Yup.object().shape({ email });\nexport const resetSchema = Yup.object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([Yup.ref('newPass')], 'must match'),\n});\n\nexport const profileSchema = Yup.object().shape({\n  name,\n  email,\n  whatsApp: Yup.string().matches(...pattern(regExp.PHONE)),\n  telegram: Yup.string().matches(...pattern(regExp.TELEGRAM)),\n  location: Yup.string().matches(...pattern(regExp.ADDRESS)),\n  socialLink: Yup.string().matches(...pattern(regExp.HTTP_LINK)),\n  birthday: Yup.string().matches(...pattern(regExp.DATE)),\n  about: Yup.string(),\n});\n\nexport const avatarSchema = Yup.object().shape({ avatar });\n","import * as Yup from 'yup';\n\nimport { regExp } from 'utils/constants';\n\nconst pattern = regExp => [regExp.pattern, regExp.msg];\n\nexport const contactSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Required')\n    .matches(...pattern(regExp.NAME)),\n  lastName: Yup.string().matches(...pattern(regExp.NAME)),\n  phone: Yup.string()\n    .required('Required')\n    .matches(...pattern(regExp.PHONE)),\n  email: Yup.string().matches(...pattern(regExp.EMAIL)),\n  whatsapp: Yup.string().matches(...pattern(regExp.PHONE)),\n  viber: Yup.string().matches(...pattern(regExp.PHONE)),\n  telegram: Yup.string().matches(...pattern(regExp.TELEGRAM)),\n  linkedin: Yup.string().matches(...pattern(regExp.LINKEDIN)),\n  github: Yup.string().matches(...pattern(regExp.GITHUB)),\n  address: Yup.string().matches(...pattern(regExp.ADDRESS)),\n  birthday: Yup.string().matches(...pattern(regExp.DATE)),\n  notes: Yup.string(),\n});\n"],"names":["Div","styled","Wrapper","themes","Avatar","url","abbr","setIsProfileForm","dispatch","useDispatch","user","useAuth","abbreviation","useAbbreviation","name","avatarUrl","USER_CREDENTIALS","el","GridWrap","mm","cg","gtc","Button","onClick","window","confirm","deleteUserThunk","HoverFocusStyles","css","Form","FormikForm","Label","Field","FormikField","ErrorMsg","ErrorMessage","AvatarMsg","useState","setAvatarUrl","avatarError","setAvatarError","setAvatar","e","setFieldValue","avatar","target","files","avatarSchema","imageUrl","URL","createObjectURL","message","initialValues","key","getInitialValues","validationSchema","profileSchema","onSubmit","values","actions","formData","FormData","Object","keys","forEach","append","trim","updateUserThunk","resetForm","Container","m","p","d","ai","type","onChange","className","component","isLoading","isProfileForm","gridHeight","innerHeight","h","NAME","msg","pattern","EMAIL","PHONE","TELEGRAM","HTTP_LINK","LINKEDIN","GITHUB","DATE","ADDRESS","CONTACT_CREDENTIALS","CONTACT_FIELDS","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","text","replace","split","reduce","acc","at","toUpperCase","substring","regExp","Yup","min","required","matches","email","password","code","typeError","MAX_SIZE","test","file","size","includes","signupSchema","shape","signinSchema","verifySchema","verificationCode","forgotSchema","resetSchema","newPass","confirmPass","oneOf","whatsApp","telegram","location","socialLink","birthday","about","contactSchema","firstName","lastName","phone","whatsapp","viber","linkedin","github","address","notes"],"sourceRoot":""}