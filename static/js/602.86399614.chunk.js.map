{"version":3,"file":"static/js/602.86399614.chunk.js","mappings":"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","sources":["components/ProfileCard/ProfileCard.styled.jsx","components/ProfileCard/ProfileCard.jsx","components/ProfileForm/ProfileForm.styled.jsx","components/ProfileForm/ProfileForm.jsx","pages/ProfilePage.jsx","utils/constants/regExp.js","utils/constants/renderFields.js","utils/hooks/useContacts.js","utils/hooks/useAbbreviation.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { themes } from 'styles/themes';\n\nexport const Div = styled.div`\n  position: relative;\n\n  & #grid:last-of-type {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding-block: 2px;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-column-gap: 20px;\n  text-align: right;\n  align-items: center;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  &:not(:nth-last-of-type(2)) {\n    border-bottom: 1px solid ${themes.colors.border};\n  }\n\n  & span {\n    padding-block: 5px;\n    text-align: start;\n\n    &:nth-of-type(2n + 1) {\n      text-align: end;\n      color: ${themes.colors.placeholder};\n\n      &::first-letter {\n        text-transform: lowercase;\n      }\n    }\n  }\n`;\n\nexport const Avatar = styled.div`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  margin: 12px 0 20px 3vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Averia Sans Libre', sans-serif;\n  font-size: 72px;\n  font-weight: 700;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 50%;\n  background-color: ${themes.colors.white};\n  background-image: ${({ url }) => `url(${url})`};\n  background-size: cover;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ${({ abbr }) => `content:\"${abbr}\"`};\n    width: 198px;\n    height: 198px;\n    color: ${themes.colors.placeholder};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Button from 'components/shared/Button/Button';\nimport { useAuth, useAbbreviation } from 'utils/hooks';\nimport { deleteThunk } from 'store/auth/authOperations';\nimport { USER_CREDENTIALS } from 'utils/constants';\nimport { Div, Wrapper, Avatar } from './ProfileCard.styled';\n\nconst ProfileCard = ({ setIsProfileForm }) => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const abbreviation = useAbbreviation(user.name);\n\n  const handleDeleteProfile = () => {\n    const del = window.confirm('Do you want to delete your profile and data?');\n    del && dispatch(deleteThunk());\n  };\n\n  return (\n    <Div>\n      <Avatar url={user.avatarUrl} abbr={user.avatarUrl ? '' : abbreviation} />\n\n      {USER_CREDENTIALS.map(\n        el =>\n          user[el] && (\n            <Wrapper key={el}>\n              <span>{el}:</span>\n              <span>{user[el]}</span>\n            </Wrapper>\n          )\n      )}\n\n      <GridWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n        <Button onClick={() => setIsProfileForm(true)}>Edit</Button>\n        <div></div>\n        <Button onClick={handleDeleteProfile}>Delete</Button>\n      </GridWrap>\n    </Div>\n  );\n};\n\nexport default ProfileCard;\n\nProfileCard.propTypes = { setIsProfileForm: PropTypes.func };\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  position: relative;\n\n  & .wrapper:not(:nth-last-of-type(2)) {\n    border-bottom: 1px solid ${themes.colors.border};\n  }\n\n  & #grid:last-of-type {\n    padding-left: 21%;\n\n    @media screen and (width > 768px) {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  padding-block: 2px;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-column-gap: 20px;\n  text-align: right;\n  align-items: center;\n\n  color: ${themes.colors.placeholder};\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Field = styled(FormikField)`\n  text-align: left;\n  background-color: transparent;\n  padding: 5px 0;\n\n  border: 1px solid transparent;\n  outline: transparent;\n  transition: border-color 250ms;\n\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: 500;\n  color: ${themes.colors.black};\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0px 1000px transparent inset;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-left: 22%;\n  padding-bottom: 5px;\n  font-size: 12px;\n  font-family: 'Roboto', sans-serif;\n  color: ${themes.colors.error};\n`;\n\nexport const Avatar = styled(FormikField)`\n  position: relative;\n  width: 200px;\n  height: 200px;\n  margin: 12px 0 20px 3vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Averia Sans Libre', sans-serif;\n  font-size: 72px;\n  font-weight: 700;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 50%;\n  background-color: ${themes.colors.white};\n  background-image: ${({ url }) => `url(${url})`};\n  background-size: cover;\n  cursor: pointer;\n  color: transparent;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ${({ abbr }) => `content:\"${abbr}\"`};\n    width: 198px;\n    height: 198px;\n    color: ${themes.colors.placeholder};\n  }\n\n  // &::-webkit-file-upload-button\n  &::file-selector-button {\n    display: none;\n  }\n`;\n","import PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport Button from 'components/shared/Button/Button';\nimport { useAuth, useAbbreviation } from 'utils/hooks';\nimport { USER_CREDENTIALS } from 'utils/constants';\nimport { Form, Field, Label, ErrorMsg, Avatar } from './ProfileForm.styled';\n\nconst ProfileForm = ({ setIsProfileForm }) => {\n  // const dispatch = useDispatch();\n  const { user } = useAuth();\n  const abbreviation = useAbbreviation(user.name);\n\n  const getInitialValues = () => {\n    const initialValues = {};\n    USER_CREDENTIALS.forEach(key => {\n      return (initialValues[key] = user[key]);\n    });\n\n    return initialValues;\n  };\n\n  const onSubmit = (values, actions) => {\n    console.log('values: ', values);\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={getInitialValues()}\n      validationSchema={''}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <Avatar\n          type=\"file\"\n          name=\"avatar\"\n          url={user.avatarUrl}\n          abbr={user.avatarUrl ? '' : abbreviation}\n        />\n\n        {USER_CREDENTIALS.map(key => (\n          <div className=\"wrapper\" key={key}>\n            <Label>\n              {key}:\n              <Field type=\"text\" name={key} />\n            </Label>\n            <ErrorMsg name={key} component=\"div\" />\n          </div>\n        ))}\n\n        <GridWrap mm=\"40px\" cg=\"3vw\" gtc=\"1fr 1fr 1fr\">\n          <Button type=\"submit\">Submit</Button>\n          <Button onClick={() => setIsProfileForm(false)}>Cancel</Button>\n        </GridWrap>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ProfileForm;\n\nProfileForm.propTypes = { setIsProfileForm: PropTypes.func };\n","import { useState } from 'react';\n\nimport GridWrap from 'components/shared/GridWrap/GridWrap';\nimport ProfileCard from 'components/ProfileCard/ProfileCard';\nimport ProfileForm from 'components/ProfileForm/ProfileForm';\n\nconst ProfilePage = () => {\n  const [isProfileForm, setIsProfileForm] = useState(false);\n\n  const gridHeight = window.innerHeight > 600 ? 'calc(100vh - 90px)' : '510px';\n\n  return (\n    <GridWrap h={gridHeight} gtc=\"2fr 3fr\">\n      <h1>Profile</h1>\n      {!isProfileForm && <ProfileCard setIsProfileForm={setIsProfileForm} />}\n      {isProfileForm && <ProfileForm setIsProfileForm={setIsProfileForm} />}\n    </GridWrap>\n  );\n};\n\nexport default ProfilePage;\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'only letters and numbers,  more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'https://linkedin.com',\n  regExp:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const GITHUB = {\n  msg: 'https://...github',\n  regExp:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const DATE = {\n  msg: 'dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const ADDRESS = {\n  msg: 'only letters, numbers, commas, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","export const CONTACT_CREDENTIALS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const CONTACT_FIELDS = ['firstName', 'lastName', ...CONTACT_CREDENTIALS];\n\nexport const USER_CREDENTIALS = [\n  'name',\n  'email',\n  'whatsApp',\n  'telegram',\n  'location',\n  'socialLink',\n  'birthday',\n  'about',\n];\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","export const useAbbreviation = text => {\n  const abbreviation = text\n    .replace('-', ' ')\n    .split(/\\s+/)\n    .reduce((acc, el) => acc + el.at(0).toUpperCase(), '')\n    .substring(0, 3);\n\n  return abbreviation;\n};\n"],"names":["Div","styled","Wrapper","themes","Avatar","url","abbr","setIsProfileForm","dispatch","useDispatch","user","useAuth","abbreviation","useAbbreviation","name","avatarUrl","USER_CREDENTIALS","el","GridWrap","mm","cg","gtc","Button","onClick","window","confirm","deleteThunk","Form","FormikForm","Label","Field","FormikField","ErrorMsg","ErrorMessage","initialValues","key","getInitialValues","validationSchema","onSubmit","values","actions","console","log","resetForm","type","className","component","useState","isProfileForm","gridHeight","innerHeight","h","NAME","msg","regExp","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","CONTACT_CREDENTIALS","CONTACT_FIELDS","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading","text","replace","split","reduce","acc","at","toUpperCase","substring"],"sourceRoot":""}