{"version":3,"file":"static/js/69.fd4a0a22.chunk.js","mappings":"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","sources":["components/AuthForms/AuthBtns/AuthBtns.styled.jsx","components/AuthForms/AuthBtns/GoogleBtn.jsx","components/AuthForms/AuthBtns/SignBtn.jsx","components/AuthForms/AuthForms.styled.jsx","components/AuthForms/AuthLinks/Link.styled.jsx","components/AuthForms/AuthLinks/LinkRoute.jsx","components/AuthForms/IconBtn/IconBtn.styled.jsx","components/AuthForms/IconBtn/IconBtn.jsx","components/AuthForms/VerifyForm.jsx","components/shared/Modal/Modal.styled.jsx","components/shared/Modal/Modal.jsx","utils/constants/regExp.js","utils/constants/renderFields.js","utils/hooks/useContacts.js","utils/hooks/useAbbreviation.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  height: 41px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n\n  @media screen and (width >= 768px) {\n    font-size: 16px;\n  }\n\n  border: 1px solid;\n  border-radius: ${themes.radius.s};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n`;\n\nexport const SignButton = styled.button`\n  ${CommonStyles};\n\n  margin-top: 30px;\n\n  font-weight: 700;\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.white};\n  background-color: ${themes.colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.hovered};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.accent};\n    background-color: ${themes.colors.accent};\n  }\n`;\n\nexport const IconLink = styled.a`\n  ${CommonStyles};\n\n  margin-top: 18px;\n  padding-inline: 10px;\n\n  font-weight: 400;\n  border-color: ${themes.colors.border};\n  color: ${themes.colors.black};\n  background-color: ${themes.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.ligthBlue};\n  }\n\n  & pre {\n    font-size: 12px;\n  }\n`;\n","import { FcGoogle } from 'react-icons/fc';\nimport { MdArrowForwardIos } from 'react-icons/md';\n\nimport { baseURL } from 'servises/baseURL';\nimport Container from 'components/shared/Container/Container';\nimport { IconLink } from './AuthBtns.styled';\n\nconst GoogleBtn = () => (\n  <IconLink href={`${baseURL}/auth/google`}>\n    <Container p=\"0\" d=\"flex\" ai=\"center\" jc=\"space-between\">\n      <FcGoogle size=\"20px\" />\n      Sign in with Google\n      <MdArrowForwardIos size=\"16px\" />\n    </Container>\n  </IconLink>\n);\n\nexport default GoogleBtn;\n","import PropTypes from 'prop-types';\n\nimport { SignButton } from './AuthBtns.styled';\n\nconst SignBtn = ({ onClick, disabled, children }) => {\n  return (\n    <SignButton onClick={onClick} type=\"submit\" disabled={disabled}>\n      {children}\n    </SignButton>\n  );\n};\n\nexport default SignBtn;\n\nSignButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.oneOf(['img', 'png', 'svg']),\n  ]).isRequired,\n};\n","import styled, { css } from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage } from 'formik';\nimport { BsCheckCircle, BsExclamationCircle } from 'react-icons/bs';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n\n  border-radius: ${themes.radius.m};\n  background-color: ${themes.colors.white};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: baseline;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  & pre {\n    font-size: 10px;\n  }\n  // &::first-letter { text-transform: uppercase; }\n`;\n\nconst FieldStyles = css`\n  margin-bottom: 20px;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FieldWrap = styled.div`\n  ${FieldStyles}\n  position: relative;\n`;\n\nexport const Field = styled(FormikField)`\n  ${FieldStyles}\n\n  padding: 10px 12px;\n  padding-left: ${({ name }) => name.toLowerCase().includes('pass') && '38px'};\n\n  font-size: 16px;\n  font-family: 'Roboto', sans-serif;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: ${themes.radius.s};\n  outline: 0.5px solid transparent;\n  transition: border-color 250ms linear, outline-color 250ms linear;\n\n  border-color: ${({ validation }) => {\n    switch (validation) {\n      case 'noValue':\n        return themes.colors.border;\n      case validation:\n        return themes.colors[validation];\n      default:\n        break;\n    }\n  }};\n\n  &:hover,\n  &:focus {\n    border-color: ${({ validation }) => {\n      switch (validation) {\n        case validation:\n          return themes.colors[validation];\n        default:\n          break;\n      }\n    }};\n\n    outline-color: ${({ validation }) => {\n      switch (validation) {\n        case validation:\n          return themes.colors[validation];\n        default:\n          break;\n      }\n    }};\n  }\n`;\n\nexport const Tittle = styled.div`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  & h2 {\n    margin: 0;\n\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  font-weight: 400;\n\n  color: ${themes.colors.error};\n`;\n\nconst IconStyles = css`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n`;\n\nexport const SuccessIcon = styled(BsCheckCircle)`\n  ${IconStyles};\n\n  color: ${themes.colors.success};\n`;\n\nexport const ErrorIcon = styled(BsExclamationCircle)`\n  ${IconStyles};\n\n  color: ${themes.colors.error};\n`;\n","import styled, { css } from 'styled-components';\nimport { Link as RouteLink } from 'react-router-dom';\n\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  margin-left: auto;\n\n  color: ${themes.colors.accent};\n  text-decoration: underline;\n  font-family: 'Roboto', sans-serif;\n  font-size: ${({ fs = '14px' }) => fs};\n  font-weight: 400;\n`;\n\nexport const Link = styled(RouteLink)`\n  ${CommonStyles};\n`;\n\nexport const Btn = styled.button`\n  ${CommonStyles};\n\n  background-color: transparent;\n  border-color: transparent;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Link } from './Link.styled';\n\nconst LinkRoute = ({ to, fs, children }) => {\n  return (\n    <Link to={to} fs={fs}>\n      {children}\n    </Link>\n  );\n};\n\nexport default LinkRoute;\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  fs: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Button = styled.button`\n  width: fit-content;\n  position: absolute;\n  top: 50%;\n  left: 10px;\n\n  transform: translateY(-50%);\n\n  border-color: transparent;\n  background-color: transparent;\n  color: ${themes.colors.border};\n  transition: color 250ms;\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.black};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\n\nimport { Button } from './IconBtn.styled';\n\nconst IconBtn = ({ toggle, setToggle }) => {\n  const onClick = () => {\n    if (toggle === 'text') setToggle('password');\n    if (toggle === 'password') setToggle('text');\n  };\n\n  return (\n    <Button type=\"button\" onClick={onClick}>\n      {toggle === 'password' && <BsEye size=\"18px\" />}\n      {toggle === 'text' && <BsEyeSlash size=\"18px\" />}\n    </Button>\n  );\n};\n\nexport default IconBtn;\n\nIconBtn.propTypes = {\n  setToggle: PropTypes.func.isRequired,\n  toggle: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport SignBtn from './AuthBtns/SignBtn';\nimport { verifySchema } from 'utils/validation';\nimport { refreshUserThunk, verifyEmailThunk } from 'store/auth/authOperations';\nimport { Form, Field, ErrorMsg, Label } from './AuthForms.styled';\nimport { FieldWrap, Tittle, SuccessIcon, ErrorIcon } from './AuthForms.styled';\n\nconst VerifyForm = ({ userEmail }) => {\n  const dispatch = useDispatch();\n\n  const isValid = ({ values, errors }) => {\n    const noValue = !Object.values(values)[0] && 'noValue';\n    const isError = Object.values(errors).length ? 'error' : 'success';\n    return noValue || isError;\n  };\n\n  const isDisabled = ({ errors }) => Object.keys(errors).length;\n\n  const onSubmit = (values, actions) => {\n    dispatch(verifyEmailThunk(values))\n      .unwrap() // .then(pld =>  console.log(pld))\n      .catch(err => console.log(err))\n      .then(() => dispatch(refreshUserThunk()));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ verificationCode: '' }}\n      validationSchema={verifySchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Tittle>\n            <h2>Verify: {userEmail}</h2>\n          </Tittle>\n\n          <Fragment>\n            <Label>\n              Code:\n              <pre> </pre>\n              <ErrorMsg name=\"verificationCode\" component=\"span\" />\n            </Label>\n            <FieldWrap>\n              <Field\n                type=\"text\"\n                name=\"verificationCode\"\n                validation={isValid({ values, errors })}\n              />\n\n              {isValid({ values, errors }) === 'error' && <ErrorIcon />}\n              {isValid({ values, errors }) === 'success' && <SuccessIcon />}\n            </FieldWrap>\n          </Fragment>\n\n          <SignBtn disabled={isDisabled({ errors })}>Submit</SignBtn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VerifyForm;\n\nVerifyForm.propTypes = { userEmail: PropTypes.string.isRequired };\n","import styled from 'styled-components';\nimport { themes } from 'styles/themes';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n\n  background-color: ${themes.colors.backdrop};\n  backdrop-filter: blur(5px);\n\n  & > div {\n    min-width: 400px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n\n    transform: translate(-50%, -50%);\n\n    background-color: transparent; // ${themes.colors.white};\n    box-shadow: ${themes.shadows.modal};\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Backdrop } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal');\n\nconst Modal = ({ onClick, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      e.key === 'Escape' && onClick();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClick]);\n\n  const handleBackdropClick = e => e.target === e.currentTarget && onClick();\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <div>{children}</div>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","const NAME = {\n  name: 'NAME',\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  pattern: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst EMAIL = {\n  name: 'EMAIL',\n  msg: 'test@test.com, test@test.ua',\n  pattern: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nconst PHONE = {\n  name: 'PHONE',\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  pattern: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nconst TELEGRAM = {\n  name: 'TELEGRAM',\n  msg: 'only letters and numbers,  more than five, start with @',\n  pattern: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nconst TELEGRAM_PHONE = {\n  name: 'TELEGRAM_PHONE',\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  pattern:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nconst HTTP_LINK = {\n  name: 'HTTP_LINK',\n  msg: 'http(s)://.../...',\n  pattern:\n    /^(http(s)?:\\/\\/)?(([_.-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst LINKEDIN = {\n  name: 'LINKEDIN',\n  msg: 'http(s)://linkedin.com/...',\n  pattern:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst GITHUB = {\n  name: 'GITHUB',\n  msg: 'http(s)://www.github.com/...',\n  pattern:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nconst DATE = {\n  name: 'DATE',\n  msg: 'dd.mm.yyyy',\n  pattern:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(\\.)(((0)[0-9])|((1)[0-2]))(\\.)((19|20)\\d{2}$)/,\n};\n\nconst ADDRESS = {\n  name: 'ADDRESS',\n  msg: 'only letters, numbers, commas, dashes, spases',\n  pattern:\n    /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я0-9])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport {\n  NAME,\n  EMAIL,\n  PHONE,\n  TELEGRAM,\n  TELEGRAM_PHONE,\n  HTTP_LINK,\n  LINKEDIN,\n  GITHUB,\n  DATE,\n  ADDRESS,\n};\n","export const CONTACT_CREDENTIALS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const CONTACT_FIELDS = ['firstName', 'lastName', ...CONTACT_CREDENTIALS];\n\nexport const USER_CREDENTIALS = [\n  'name',\n  'email',\n  'whatsApp',\n  'telegram',\n  'location',\n  'socialLink',\n  'birthday',\n  'about',\n];\n","import { useSelector } from 'react-redux';\nimport * as selectors from 'store/seletors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const activeContact = useSelector(selectors.selectActiveContact);\n  const filterValue = useSelector(selectors.selectFilterValue);\n\n  const error = useSelector(selectors.selectError);\n  const isLoading = useSelector(selectors.selectIsLoading);\n\n  return { contacts, activeContact, filterValue, error, isLoading };\n};\n","export const useAbbreviation = text => {\n  const abbreviation = text\n    .replace('-', ' ')\n    .split(/\\s+/)\n    .reduce((acc, el) => acc + el.at(0).toUpperCase(), '')\n    .substring(0, 3);\n\n  return abbreviation;\n};\n","import * as Yup from 'yup';\n\nimport { regExp } from 'utils/constants';\n\nconst pattern = regExp => [regExp.pattern, regExp.msg];\n\n// Name, Email, Password\nconst name = Yup.string()\n  .min(4, 'is too short')\n  .required('is required')\n  .matches(...pattern(regExp.NAME));\nconst email = Yup.string()\n  .required('is required')\n  .matches(...pattern(regExp.EMAIL));\nconst password = Yup.string().min(6, 'is too short').required('is required');\nconst code = Yup.number().required('is required').typeError('must be a number');\n\n// Avatar\nconst MAX_SIZE = 1024 * 1024;\nconst MB = 1024 * 1024; // const kB = 1024;\n\nconst avatar = Yup.mixed()\n  .test('size', ` max file size: ${MAX_SIZE / MB}MB`, file =>\n    !file ? true : file.size <= MAX_SIZE\n  )\n  .test('type', 'invalid file type', file =>\n    !file ? true : file.type.includes('image')\n  );\n\nexport const signupSchema = Yup.object().shape({ name, email, password });\nexport const signinSchema = Yup.object().shape({ email, password });\nexport const verifySchema = Yup.object().shape({ verificationCode: code });\nexport const forgotSchema = Yup.object().shape({ email });\nexport const resetSchema = Yup.object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([Yup.ref('newPass')], 'must match'),\n});\n\nexport const profileSchema = Yup.object().shape({\n  name,\n  email,\n  whatsApp: Yup.string().matches(...pattern(regExp.PHONE)),\n  telegram: Yup.string().matches(...pattern(regExp.TELEGRAM)),\n  location: Yup.string().matches(...pattern(regExp.ADDRESS)),\n  socialLink: Yup.string().matches(...pattern(regExp.HTTP_LINK)),\n  birthday: Yup.string().matches(...pattern(regExp.DATE)),\n  about: Yup.string(),\n});\n\nexport const avatarSchema = Yup.object().shape({ avatar });\n","import * as Yup from 'yup';\n\nimport { regExp } from 'utils/constants';\n\nconst pattern = regExp => [regExp.pattern, regExp.msg];\n\nexport const contactSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Required')\n    .matches(...pattern(regExp.NAME)),\n  lastName: Yup.string().matches(...pattern(regExp.NAME)),\n  phone: Yup.string()\n    .required('Required')\n    .matches(...pattern(regExp.PHONE)),\n  email: Yup.string().matches(...pattern(regExp.EMAIL)),\n  whatsapp: Yup.string().matches(...pattern(regExp.PHONE)),\n  viber: Yup.string().matches(...pattern(regExp.PHONE)),\n  telegram: Yup.string().matches(...pattern(regExp.TELEGRAM)),\n  linkedin: Yup.string().matches(...pattern(regExp.LINKEDIN)),\n  github: Yup.string().matches(...pattern(regExp.GITHUB)),\n  address: Yup.string().matches(...pattern(regExp.ADDRESS)),\n  birthday: Yup.string().matches(...pattern(regExp.DATE)),\n  notes: Yup.string(),\n});\n"],"names":["CommonStyles","css","themes","SignButton","styled","IconLink","href","baseURL","p","d","ai","jc","size","onClick","disabled","children","type","PropTypes","isRequired","Form","FormikForm","Label","FieldStyles","FieldWrap","Field","FormikField","name","toLowerCase","includes","validation","Tittle","ErrorMsg","ErrorMessage","IconStyles","SuccessIcon","BsCheckCircle","ErrorIcon","BsExclamationCircle","fs","Link","RouteLink","Btn","to","Button","toggle","setToggle","userEmail","dispatch","useDispatch","isValid","values","errors","noValue","Object","isError","length","isDisabled","keys","initialValues","verificationCode","validationSchema","verifySchema","onSubmit","actions","verifyEmailThunk","unwrap","catch","err","console","log","then","refreshUserThunk","resetForm","Fragment","component","Backdrop","modalRoot","document","querySelector","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","createPortal","target","currentTarget","NAME","msg","pattern","EMAIL","PHONE","TELEGRAM","HTTP_LINK","LINKEDIN","GITHUB","DATE","ADDRESS","CONTACT_CREDENTIALS","CONTACT_FIELDS","USER_CREDENTIALS","useContacts","contacts","useSelector","selectors","activeContact","filterValue","error","isLoading","useAbbreviation","text","replace","split","reduce","acc","el","at","toUpperCase","substring","regExp","Yup","min","required","matches","email","password","code","typeError","MAX_SIZE","avatar","test","file","signupSchema","shape","signinSchema","forgotSchema","resetSchema","newPass","confirmPass","oneOf","profileSchema","whatsApp","telegram","location","socialLink","birthday","about","avatarSchema","contactSchema","firstName","lastName","phone","whatsapp","viber","linkedin","github","address","notes"],"sourceRoot":""}