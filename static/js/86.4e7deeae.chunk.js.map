{"version":3,"file":"static/js/86.4e7deeae.chunk.js","mappings":"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","sources":["components/AuthForms/AuthBtns/AuthBtns.styled.jsx","components/AuthForms/AuthBtns/SignBtn.jsx","components/AuthForms/AuthForms.styled.jsx","components/AuthForms/ResetForm.jsx","pages/ResetPage.jsx","utils/constants/contactFields.js","utils/constants/regExp.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  height: 41px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n\n  @media screen and (width >= 768px) {\n    font-size: 16px;\n  }\n\n  border: 1px solid;\n  border-radius: ${themes.radius.s};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n`;\n\nexport const SignButton = styled.button`\n  ${CommonStyles};\n\n  margin-top: 30px;\n\n  font-weight: 700;\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.white};\n  background-color: ${themes.colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.hovered};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.accent};\n    background-color: ${themes.colors.accent};\n  }\n`;\n\nexport const IconLink = styled.a`\n  ${CommonStyles};\n\n  margin-top: 18px;\n  padding-inline: 10px;\n\n  font-weight: 400;\n  border-color: ${themes.colors.border};\n  color: ${themes.colors.black};\n  background-color: ${themes.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.ligthBlue};\n  }\n\n  & pre {\n    font-size: 12px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { SignButton } from './AuthBtns.styled';\n\nconst SignBtn = ({ onClick, disabled, children }) => {\n  return (\n    <SignButton onClick={onClick} type=\"submit\" disabled={disabled}>\n      {children}\n    </SignButton>\n  );\n};\n\nexport default SignBtn;\n\nSignButton.propTepes = {\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.oneOf(['img', 'png', 'svg']),\n  ]),\n};\n","import styled, { css } from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n\n  border-radius: ${themes.radius.m};\n  background-color: ${themes.colors.white};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: baseline;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  & pre {\n    font-size: 10px;\n  }\n  // &::first-letter { text-transform: uppercase; }\n`;\n\nconst FieldStyles = css`\n  margin-bottom: 20px;\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FieldWrap = styled.div`\n  ${FieldStyles}\n  position: relative;\n`;\n\nexport const Field = styled(FormikField)`\n  ${FieldStyles}\n\n  padding: 10px 12px;\n\n  font-size: 16px;\n  font-family: 'Roboto', sans-serif;\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: ${themes.radius.s};\n  outline: 0.5px solid transparent;\n  transition: border-color 250ms linear, outline-color 250ms linear;\n\n  border-color: ${({ validation }) => {\n    switch (validation) {\n      case 'noValue':\n        return themes.colors.border;\n      case validation:\n        return themes.colors[validation];\n      default:\n        break;\n    }\n  }};\n\n  &:hover,\n  &:focus {\n    border-color: ${({ validation }) => {\n      switch (validation) {\n        case validation:\n          return themes.colors[validation];\n        default:\n          break;\n      }\n    }};\n\n    outline-color: ${({ validation }) => {\n      switch (validation) {\n        case validation:\n          return themes.colors[validation];\n        default:\n          break;\n      }\n    }};\n  }\n`;\n\nexport const Tittle = styled.div`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  & h2 {\n    margin: 0;\n\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  font-weight: 400;\n\n  color: ${themes.colors.error};\n`;\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport SignBtn from './AuthBtns/SignBtn';\nimport { resetThunk } from 'store/auth/authOperations';\nimport { Form, Field, ErrorMsg } from 'components/AuthForms/AuthForms.styled';\nimport { Label, Tittle } from 'components/AuthForms/AuthForms.styled';\nimport { resetSchema } from 'utils/validation';\n\nconst initialValues = { newPass: '', confirmPass: '' };\n\nconst ResetForm = ({ id, pwdToken }) => {\n  const dispatch = useDispatch();\n\n  const isValid = ({ values, errors, key }) => {\n    const noValue = !values[key] && 'noValue';\n    const isError = errors[key] ? 'error' : 'success';\n    return noValue || isError;\n  };\n\n  const isDisabled = ({ errors, values }) => {\n    const isError = Object.keys(errors).length;\n    const noValue = Object.keys(values).some(key => !values[key]);\n    return isError || noValue;\n  };\n\n  const onSubmit = (values, actions) => {\n    dispatch(resetThunk({ ...values, id, pwdToken }))\n      .unwrap() // .then(pld => console.log(pld))\n      .catch(err => console.log(err));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={resetSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Tittle>\n            <h2>Reset password</h2>\n          </Tittle>\n\n          {Object.keys(initialValues).map(key => (\n            <Fragment key={key}>\n              <Label>\n                {key.at(0).toUpperCase() +\n                  key.replace('Pass', ' password:').substring(1)}\n                <pre> </pre>\n                <ErrorMsg name={key} component=\"span\" />\n              </Label>\n              <Field\n                type=\"password\"\n                name={key}\n                validation={isValid({ values, errors, key })}\n              />\n            </Fragment>\n          ))}\n\n          <SignBtn disabled={isDisabled({ values, errors })}>Submit</SignBtn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ResetForm;\n\nResetForm.propTypes = { id: PropTypes.string, pwdToken: PropTypes.string };\n","import { useSearchParams } from 'react-router-dom';\n\nimport Container from 'components/common/Container/Container';\nimport ResetForm from 'components/AuthForms/ResetForm';\n\nconst ResetPage = () => {\n  const [searchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const pwdToken = searchParams.get('pwd_token');\n\n  return (\n    <Container w=\"400px\" h=\"100vh\" p=\"0\" d=\"flex\" fd=\"column\" jc=\"center\">\n      <ResetForm id={id} pwdToken={pwdToken} />\n    </Container>\n  );\n};\n\nexport default ResetPage;\n","export const RENDER_FIELDS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const FORM_FIELDS = ['firstName', 'lastName', ...RENDER_FIELDS];\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'only letters and numbers,  more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'https://linkedin.com',\n  regExp:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const GITHUB = {\n  msg: 'https://...github',\n  regExp:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const DATE = {\n  msg: 'dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const ADDRESS = {\n  msg: 'only letters, numbers, commas, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","import * as Yup from 'yup';\n\nimport { NAME, EMAIL } from 'utils/constants';\n\nconst name = Yup.string()\n  .min(4, 'is too short')\n  .matches(NAME.regExp, NAME.msg)\n  .required('is required');\nconst email = Yup.string()\n  .matches(EMAIL.regExp, EMAIL.msg)\n  .required('is required');\nconst password = Yup.string().min(6, 'is too short').required('is required');\nconst code = Yup.number().required('is required').typeError('must be a number');\n\nexport const signupSchema = Yup.object().shape({ name, email, password });\nexport const signinSchema = Yup.object().shape({ email, password });\nexport const verifySchema = Yup.object().shape({ verificationCode: code });\nexport const forgotSchema = Yup.object().shape({ email });\nexport const resetSchema = Yup.object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([Yup.ref('newPass')], 'must match'),\n});\n","import * as Yup from 'yup';\n\nimport { NAME, PHONE, EMAIL, TELEGRAM } from 'utils/constants';\nimport { DATE, ADDRESS, LINKEDIN, GITHUB } from 'utils/constants';\n\nexport const contactSchema = Yup.object().shape({\n  firstName: Yup.string().matches(NAME.regExp, NAME.msg).required('Required'),\n  lastName: Yup.string().matches(NAME.regExp, NAME.msg),\n  phone: Yup.string().matches(PHONE.regExp, PHONE.msg).required('Required'),\n  email: Yup.string().matches(EMAIL.regExp, EMAIL.msg),\n  whatsapp: Yup.string().matches(PHONE.regExp, PHONE.msg),\n  viber: Yup.string().matches(PHONE.regExp, PHONE.msg),\n  telegram: Yup.string().matches(TELEGRAM.regExp, TELEGRAM.msg),\n  linkedin: Yup.string().matches(LINKEDIN.regExp, LINKEDIN.msg),\n  github: Yup.string().matches(GITHUB.regExp, GITHUB.msg),\n  address: Yup.string().matches(ADDRESS.regExp, ADDRESS.msg),\n  birthday: Yup.string().matches(DATE.regExp, DATE.msg),\n  notes: Yup.string(),\n});\n"],"names":["CommonStyles","css","themes","SignButton","styled","IconLink","onClick","disabled","children","type","PropTypes","Form","FormikForm","Label","FieldStyles","FieldWrap","Field","FormikField","validation","Tittle","ErrorMsg","ErrorMessage","initialValues","newPass","confirmPass","id","pwdToken","dispatch","useDispatch","isValid","values","errors","key","noValue","isError","isDisabled","Object","keys","length","some","validationSchema","resetSchema","onSubmit","actions","resetThunk","unwrap","catch","err","console","log","resetForm","map","Fragment","at","toUpperCase","replace","substring","name","component","SignBtn","useSearchParams","searchParams","get","Container","w","h","p","d","fd","jc","RENDER_FIELDS","FORM_FIELDS","NAME","msg","regExp","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","Yup","min","matches","required","email","password","code","typeError","signupSchema","shape","signinSchema","verifySchema","verificationCode","forgotSchema","oneOf","contactSchema","firstName","lastName","phone","whatsapp","viber","telegram","linkedin","github","address","birthday","notes"],"sourceRoot":""}