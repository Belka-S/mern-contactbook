{"version":3,"file":"static/js/86.ab56c4e1.chunk.js","mappings":"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","sources":["components/AuthForms/AuthBtns/AuthBtns.styled.jsx","components/AuthForms/AuthBtns/SignBtn.jsx","components/AuthForms/AuthForms.styled.jsx","components/AuthForms/ResetForm.jsx","pages/ResetPage.jsx","utils/constants/contactFields.js","utils/constants/regExp.js","utils/validation/userSchema.js","utils/validation/contactSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { themes } from 'styles/themes';\n\nconst CommonStyles = css`\n  height: 41px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n\n  @media screen and (width >= 768px) {\n    font-size: 16px;\n  }\n\n  border: 1px solid;\n  border-radius: ${themes.radius.s};\n  transition: border-color 250ms, background-color 250ms, color 250ms;\n`;\n\nexport const SignButton = styled.button`\n  ${CommonStyles};\n\n  margin-top: 30px;\n\n  font-weight: 700;\n  border-color: ${themes.colors.accent};\n  color: ${themes.colors.white};\n  background-color: ${themes.colors.accent};\n\n  &:hover,\n  &:focus {\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.hovered};\n  }\n\n  &:disabled {\n    cursor: auto;\n    color: ${themes.colors.border};\n    border-color: ${themes.colors.accent};\n    background-color: ${themes.colors.accent};\n  }\n`;\n\nexport const IconLink = styled.a`\n  ${CommonStyles};\n\n  margin-top: 18px;\n  padding-inline: 10px;\n\n  font-weight: 400;\n  border-color: ${themes.colors.border};\n  color: ${themes.colors.black};\n  background-color: ${themes.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${themes.colors.hovered};\n    border-color: ${themes.colors.hovered};\n    background-color: ${themes.colors.ligthBlue};\n  }\n\n  & pre {\n    font-size: 12px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { SignButton } from './AuthBtns.styled';\n\nconst SignBtn = ({ onClick, disabled, children }) => {\n  return (\n    <SignButton onClick={onClick} type=\"submit\" disabled={disabled}>\n      {children}\n    </SignButton>\n  );\n};\n\nexport default SignBtn;\n\nSignButton.propTepes = {\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.oneOf(['img', 'png', 'svg']),\n  ]),\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { ErrorMessage as FormikError } from 'formik';\n\nimport { themes } from 'styles/themes';\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n\n  border-radius: ${themes.radius.m};\n  background-color: ${themes.colors.white};\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  border: 1px solid ${themes.colors.border};\n  border-radius: 5px;\n  font-size: 16px;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: baseline;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  & pre {\n    font-size: 10px;\n  }\n  // &::first-letter { text-transform: uppercase; }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  font-weight: 400;\n\n  color: ${themes.colors.failed};\n`;\n\nexport const Div = styled.div`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  & h2 {\n    margin: 0;\n\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport SignBtn from './AuthBtns/SignBtn';\nimport { resetThunk } from 'store/auth/authOperations';\nimport { Form, Field, Label } from 'components/AuthForms/AuthForms.styled';\nimport { ErrorMessage, Div } from 'components/AuthForms/AuthForms.styled';\nimport { resetSchema } from 'utils/validation';\n\nconst initialValues = { newPass: '', confirmPass: '' };\n\nconst ResetForm = ({ id, pwdToken }) => {\n  const dispatch = useDispatch();\n\n  const isDisabled = ({ errors, values }) => {\n    const isError = Object.keys(errors).length;\n    const noValue = Object.keys(values).some(key => !values[key]);\n    return isError || noValue;\n  };\n\n  const onSubmit = (values, actions) => {\n    dispatch(resetThunk({ ...values, id, pwdToken }))\n      .unwrap() // .then(pld => console.log(pld))\n      .catch(err => console.log(err));\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={resetSchema}\n      onSubmit={onSubmit}\n    >\n      {({ values, errors }) => (\n        <Form>\n          <Div>\n            <h2>Reset password</h2>\n          </Div>\n\n          {Object.keys(initialValues).map(key => (\n            <Fragment key={key}>\n              <Label>\n                {key.at(0).toUpperCase() +\n                  key.replace('Pass', ' password:').substring(1)}\n                <pre> </pre>\n                <ErrorMessage name={key} component=\"span\" />\n              </Label>\n              <Field type=\"password\" name={key} />\n            </Fragment>\n          ))}\n\n          <SignBtn disabled={isDisabled({ values, errors })}>Submit</SignBtn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ResetForm;\n\nResetForm.propTypes = { id: PropTypes.string, pwdToken: PropTypes.string };\n","import { useSearchParams } from 'react-router-dom';\n\nimport Container from 'components/common/Container/Container';\nimport ResetForm from 'components/AuthForms/ResetForm';\n\nconst ResetPage = () => {\n  const [searchParams] = useSearchParams();\n\n  const id = searchParams.get('id');\n  const pwdToken = searchParams.get('pwd_token');\n\n  return (\n    <Container w=\"400px\" h=\"100vh\" p=\"0\" d=\"flex\" fd=\"column\" jc=\"center\">\n      <ResetForm id={id} pwdToken={pwdToken} />\n    </Container>\n  );\n};\n\nexport default ResetPage;\n","export const RENDER_FIELDS = [\n  'phone',\n  'email',\n  'whatsapp',\n  'viber',\n  'telegram',\n  'linkedin',\n  'github',\n  'address',\n  'birthday',\n  'notes',\n];\n\nexport const FORM_FIELDS = ['firstName', 'lastName', ...RENDER_FIELDS];\n","export const NAME = {\n  msg: 'only letters, numbers, underscores, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([_ -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const EMAIL = {\n  msg: 'test@test.com, test@test.ua',\n  regExp: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const PHONE = {\n  msg: 'only digits, spaces, dashes, parentheses, can start with +',\n  regExp: /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/,\n};\n\nexport const TELEGRAM = {\n  msg: 'only letters and numbers,  more than five, start with @',\n  regExp: /.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$/,\n};\n\nexport const TELEGRAM_PHONE = {\n  msg: 'only letters, digits, spaces, dashes, parentheses, can start with +, @',\n  regExp:\n    /(.*\\B@(?=\\w{5,32}\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$)|(^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$)/,\n};\n\nexport const LINKEDIN = {\n  msg: 'https://linkedin.com',\n  regExp:\n    /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const GITHUB = {\n  msg: 'https://...github',\n  regExp:\n    /^(http(s?):\\/\\/)?(www\\.)?github\\.com+\\/(([_-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n\nexport const DATE = {\n  msg: 'dd-mm-yyyy',\n  regExp:\n    /^([0-2^([0-2][0-9]|(3)[0-1])(-)(((0)[0-9])|((1)[0-2]))(-)((19|20)\\d{2}$)/,\n};\n\nexport const ADDRESS = {\n  msg: 'only letters, numbers, commas, dashes, spases',\n  regExp: /^[a-zA-Zа-яА-Я0-9]+(([ -]|(, )[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я0-9]*)*$/,\n};\n","import { object, string, number, ref } from 'yup';\n\nimport { NAME, EMAIL } from 'utils/constants';\n\nconst name = string()\n  .min(4, 'is too short')\n  .matches(NAME.regExp, NAME.msg)\n  .required('is required');\nconst email = string().matches(EMAIL.regExp, EMAIL.msg).required('is required');\nconst password = string().min(6, 'is too short').required('is required');\nconst code = number().required('is required').typeError('must be a number');\n\nexport const signupSchema = object().shape({ name, email, password });\nexport const signinSchema = object().shape({ email, password });\nexport const verifySchema = object().shape({ verificationCode: code });\nexport const forgotSchema = object().shape({ email });\nexport const resetSchema = object().shape({\n  newPass: password,\n  confirmPass: password.oneOf([ref('newPass')], 'must match'),\n});\n","import { object, string } from 'yup';\n\nimport { NAME, PHONE, EMAIL, TELEGRAM } from 'utils/constants';\nimport { DATE, ADDRESS, LINKEDIN, GITHUB } from 'utils/constants';\n\nexport const contactSchema = object().shape({\n  firstName: string().matches(NAME.regExp, NAME.msg).required('Required'),\n  lastName: string().matches(NAME.regExp, NAME.msg),\n  phone: string().matches(PHONE.regExp, PHONE.msg).required('Required'),\n  email: string().matches(EMAIL.regExp, EMAIL.msg),\n  whatsapp: string().matches(PHONE.regExp, PHONE.msg),\n  viber: string().matches(PHONE.regExp, PHONE.msg),\n  telegram: string().matches(TELEGRAM.regExp, TELEGRAM.msg),\n  linkedin: string().matches(LINKEDIN.regExp, LINKEDIN.msg),\n  github: string().matches(GITHUB.regExp, GITHUB.msg),\n  address: string().matches(ADDRESS.regExp, ADDRESS.msg),\n  birthday: string().matches(DATE.regExp, DATE.msg),\n  notes: string(),\n});\n"],"names":["CommonStyles","css","themes","SignButton","styled","IconLink","onClick","disabled","children","type","PropTypes","Form","FormikForm","Field","FormikField","Label","ErrorMessage","FormikError","Div","initialValues","newPass","confirmPass","id","pwdToken","dispatch","useDispatch","isDisabled","errors","values","isError","Object","keys","length","noValue","some","key","validationSchema","resetSchema","onSubmit","actions","resetThunk","unwrap","catch","err","console","log","resetForm","map","Fragment","at","toUpperCase","replace","substring","name","component","SignBtn","useSearchParams","searchParams","get","Container","w","h","p","d","fd","jc","RENDER_FIELDS","FORM_FIELDS","NAME","msg","regExp","EMAIL","PHONE","TELEGRAM","LINKEDIN","GITHUB","DATE","ADDRESS","string","min","matches","required","email","password","code","number","typeError","signupSchema","object","shape","signinSchema","verifySchema","verificationCode","forgotSchema","oneOf","ref","contactSchema","firstName","lastName","phone","whatsapp","viber","telegram","linkedin","github","address","birthday","notes"],"sourceRoot":""}